from django.db import models

from django.contrib.postgres.search import SearchVectorField
from django.contrib.postgres.indexes import GinIndex

class Publication(models.Model):
	class Meta:
		managed = False
		db_table = 'publications'

	id = models.IntegerField(primary_key=True)
	title = models.TextField(blank = False)
	tak = models.TextField(blank = False)
	additionaltitles = models.TextField()
	authors = models.TextField(blank = False)
	year = models.TextField(blank = False)
	publicationtype = models.TextField()
	links = models.TextField()
	importedfrom = models.TextField()
	containername = models.TextField()
	doi = models.TextField()

	tsv = SearchVectorField(null=True, editable=False)
	tsa = SearchVectorField(null=True, editable=False)

	recordmetadata_zbuamajorversion = models.TextField()
	recordmetadata_dateretrieved = models.TextField()
	recordmetadata_dateconverted = models.TextField()
	recordmetadata_recordtype = models.TextField()
	recordmetadata_source = models.TextField()
	recordmetadata_recordname = models.TextField()
	recordmetadata_searchguid = models.TextField()
	recordmetadata_numberinsource = models.TextField()
	recordmetadata_zbuaminorversion = models.TextField()

	publisherdatecopyright = models.TextField()
	location = models.TextField()
	author100 = models.TextField()
	daterange = models.TextField()

	isbn = models.TextField()
	citation = models.TextField()
	keywords = models.TextField()
	abstract = models.TextField(blank = False)
	identifier = models.TextField()
	itemdatatype = models.TextField()
	itemdatahandler = models.TextField()
	created_at = models.DateTimeField()

	def get_persisted_id(self):
		return self.importedfrom.split("/")[-1]

	def ris_format(self):
		publication = self

		authors_list = publication.authors.replace("[author]", "").strip().strip(";").split(";")

		bibliographical_data = ["TY  - JOUR"]
		bibliographical_data.append("TI  - {0}".format(publication.title))
		[bibliographical_data.append("AU  - {0}".format(_a.strip())) for _a in authors_list]
		bibliographical_data.append("T2  - {0}".format(publication.containername))

		if publication.author100 and publication.author100 != "None":
			bibliographical_data.append("A2  - {0}".format(publication.author100))

		bibliographical_data.append("T3  - {0}".format(publication.publicationtype))
		bibliographical_data.append("AB  - {0}".format(publication.abstract))
		bibliographical_data.append("DA  - {0}".format(publication.year))
		bibliographical_data.append("PY  - {0}".format(publication.year))
		bibliographical_data.append("DO  - {0}".format(publication.doi))
		bibliographical_data.append("SN  - {0}".format(publication.isbn))

		# these columns needs to be filled
		bibliographical_data.append("UR  - {0}".format(""))
		bibliographical_data.append("L4  - {0}".format(""))

		additional_fields = """
			<p>Additional fields</p>
			<p>location = {0}</p>
			<p>daterange = {1}</p>
			<p>links = {2}</p>
			<p>citation = {3}</p>
			<p>identifier = {4}</p>
			<p> </p>
		""".format(
			publication.location,
			publication.daterange,
			publication.links,
			publication.citation,
			publication.identifier,
		).strip().replace("\t", "")
		bibliographical_data.append("N1  - {0}".format(additional_fields))

		recordmetadata = """
			<p>recordmetadata</p>
			<p>recordmetadata_zbuamajorversion = {0}</p>
			<p>recordmetadata_dateretrieved = {1}</p>
			<p>recordmetadata_dateconverted = {2}</p>
			<p>recordmetadata_recordtype = {3}</p>
			<p>recordmetadata_source = {4}</p>
			<p>recordmetadata_recordname = {5}</p>
			<p>recordmetadata_searchguid = {6}</p>
			<p>recordmetadata_numberinsource = {7}</p>
			<p>recordmetadata_zbuaminorversion = {8}</p>
			<p>additional metadata</p>
			<p>ephermeral_id = {9}</p>
			<p>itemdatatype = {10}</p>
			<p>itemdatahandler = {11}</p>
			<p>created_at = {12}</p>
			<p>importedfrom = {13}</p>
			<p> </p>
			<p> </p>
		""".format(
			publication.recordmetadata_zbuamajorversion,
			publication.recordmetadata_dateretrieved,
			publication.recordmetadata_dateconverted,
			publication.recordmetadata_recordtype,
			publication.recordmetadata_source,
			publication.recordmetadata_recordname,
			publication.recordmetadata_searchguid,
			publication.recordmetadata_numberinsource,
			publication.recordmetadata_zbuaminorversion,
			publication.id,
			publication.itemdatatype,
			publication.itemdatahandler,
			publication.created_at,
			publication.importedfrom,
		).strip().replace("\t", "")
		bibliographical_data.append("N1  - {0}".format(recordmetadata))

		bibliographical_data.append("ER  - ")

		return "\n".join(bibliographical_data)

# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey and OneToOneField has `on_delete` set to the desired behavior
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.

class F(models.Model):
    id = models.OneToOneField('Publication', models.DO_NOTHING, db_column='id', primary_key=True)
    field_21st_century_learning = models.SmallIntegerField(db_column='_21st_century_learning', blank=True, null=True)  # Field renamed because it started with '_'.
    academic_achievement = models.SmallIntegerField(blank=True, null=True)
    access = models.SmallIntegerField(blank=True, null=True)
    access_to_education = models.SmallIntegerField(blank=True, null=True)
    accessibility = models.SmallIntegerField(blank=True, null=True)
    accountability = models.SmallIntegerField(blank=True, null=True)
    achievement = models.SmallIntegerField(blank=True, null=True)
    achievement_gap = models.SmallIntegerField(blank=True, null=True)
    aid = models.SmallIntegerField(blank=True, null=True)
    assessment = models.SmallIntegerField(blank=True, null=True)
    attainment = models.SmallIntegerField(blank=True, null=True)
    attendance = models.SmallIntegerField(blank=True, null=True)
    attitude = models.SmallIntegerField(blank=True, null=True)
    attribution = models.SmallIntegerField(blank=True, null=True)
    bank = models.SmallIntegerField(blank=True, null=True)
    banking = models.SmallIntegerField(blank=True, null=True)
    behavior = models.SmallIntegerField(blank=True, null=True)
    behaviour = models.SmallIntegerField(blank=True, null=True)
    budgeting = models.SmallIntegerField(blank=True, null=True)
    change_management = models.SmallIntegerField(blank=True, null=True)
    charity = models.SmallIntegerField(blank=True, null=True)
    constraints = models.SmallIntegerField(blank=True, null=True)
    constructivism = models.SmallIntegerField(blank=True, null=True)
    constructivist = models.SmallIntegerField(blank=True, null=True)
    consumption_and_capital_investment = models.SmallIntegerField(blank=True, null=True)
    cost = models.SmallIntegerField(blank=True, null=True)
    cost_analysis = models.SmallIntegerField(blank=True, null=True)
    cost_benefit_analysis = models.SmallIntegerField(blank=True, null=True)
    cost_classification = models.SmallIntegerField(blank=True, null=True)
    cost_effectiveness = models.SmallIntegerField(blank=True, null=True)
    cost_of_living = models.SmallIntegerField(blank=True, null=True)
    curricula = models.SmallIntegerField(blank=True, null=True)
    curriculum = models.SmallIntegerField(blank=True, null=True)
    demand = models.SmallIntegerField(blank=True, null=True)
    decision_making = models.SmallIntegerField(blank=True, null=True)
    dialogic_pedagogy = models.SmallIntegerField(blank=True, null=True)
    dialogue = models.SmallIntegerField(blank=True, null=True)
    digital_economy = models.SmallIntegerField(blank=True, null=True)
    digital_goods_and_services = models.SmallIntegerField(blank=True, null=True)
    digital_trade = models.SmallIntegerField(blank=True, null=True)
    discriminatory_taxes = models.SmallIntegerField(blank=True, null=True)
    diversity = models.SmallIntegerField(blank=True, null=True)
    divided_societies = models.SmallIntegerField(blank=True, null=True)
    domestic_education_spending = models.SmallIntegerField(blank=True, null=True)
    donor = models.SmallIntegerField(blank=True, null=True)
    donor_sponsored = models.SmallIntegerField(blank=True, null=True)
    early_literacy = models.SmallIntegerField(blank=True, null=True)
    economic_factors = models.SmallIntegerField(blank=True, null=True)
    economics = models.SmallIntegerField(blank=True, null=True)
    education_financing = models.SmallIntegerField(blank=True, null=True)
    education_rbf = models.SmallIntegerField(blank=True, null=True)
    education_results_based_financing = models.SmallIntegerField(blank=True, null=True)
    educational_equality = models.SmallIntegerField(blank=True, null=True)
    educational_equity = models.SmallIntegerField(blank=True, null=True)
    educational_opportunities = models.SmallIntegerField(blank=True, null=True)
    efficiency = models.SmallIntegerField(blank=True, null=True)
    emancipation = models.SmallIntegerField(blank=True, null=True)
    empowerment = models.SmallIntegerField(blank=True, null=True)
    equity = models.SmallIntegerField(blank=True, null=True)
    exclusion = models.SmallIntegerField(blank=True, null=True)
    expenditures = models.SmallIntegerField(blank=True, null=True)
    expense = models.SmallIntegerField(blank=True, null=True)
    female = models.SmallIntegerField(blank=True, null=True)
    federal_aid = models.SmallIntegerField(blank=True, null=True)
    finance = models.SmallIntegerField(blank=True, null=True)
    financers = models.SmallIntegerField(blank=True, null=True)
    financial_feasibility = models.SmallIntegerField(blank=True, null=True)
    financial_policy = models.SmallIntegerField(blank=True, null=True)
    financial_stream = models.SmallIntegerField(blank=True, null=True)
    financial_support = models.SmallIntegerField(blank=True, null=True)
    financing = models.SmallIntegerField(blank=True, null=True)
    flexible = models.SmallIntegerField(blank=True, null=True)
    fund_raising = models.SmallIntegerField(blank=True, null=True)
    funder = models.SmallIntegerField(blank=True, null=True)
    funding = models.SmallIntegerField(blank=True, null=True)
    funding_formula = models.SmallIntegerField(blank=True, null=True)
    funding_proposals = models.SmallIntegerField(blank=True, null=True)
    fundraising = models.SmallIntegerField(blank=True, null=True)
    gender = models.SmallIntegerField(blank=True, null=True)
    gender_equality = models.SmallIntegerField(blank=True, null=True)
    girl = models.SmallIntegerField(blank=True, null=True)
    government = models.SmallIntegerField(blank=True, null=True)
    government_funding = models.SmallIntegerField(blank=True, null=True)
    government_role = models.SmallIntegerField(blank=True, null=True)
    high_tariffs = models.SmallIntegerField(blank=True, null=True)
    improvement = models.SmallIntegerField(blank=True, null=True)
    incentives = models.SmallIntegerField(blank=True, null=True)
    incidental_learning = models.SmallIntegerField(blank=True, null=True)
    inclusion = models.SmallIntegerField(blank=True, null=True)
    inclusive_education = models.SmallIntegerField(blank=True, null=True)
    inclusive_learning = models.SmallIntegerField(blank=True, null=True)
    information_sciences = models.SmallIntegerField(blank=True, null=True)
    instructional_design = models.SmallIntegerField(blank=True, null=True)
    instructionalism = models.SmallIntegerField(blank=True, null=True)
    interactionism = models.SmallIntegerField(blank=True, null=True)
    interactive_pedagogy = models.SmallIntegerField(blank=True, null=True)
    interactive_teaching = models.SmallIntegerField(blank=True, null=True)
    intercultural = models.SmallIntegerField(blank=True, null=True)
    integration = models.SmallIntegerField(blank=True, null=True)
    internet_economy = models.SmallIntegerField(blank=True, null=True)
    investments = models.SmallIntegerField(blank=True, null=True)
    leadership = models.SmallIntegerField(blank=True, null=True)
    learning_ecologies = models.SmallIntegerField(blank=True, null=True)
    life_wide_learning = models.SmallIntegerField(blank=True, null=True)
    lifelong_learning = models.SmallIntegerField(blank=True, null=True)
    limitations = models.SmallIntegerField(blank=True, null=True)
    literacy = models.SmallIntegerField(blank=True, null=True)
    literacy_assessment = models.SmallIntegerField(blank=True, null=True)
    management = models.SmallIntegerField(blank=True, null=True)
    millennium_development_goals = models.SmallIntegerField(blank=True, null=True)
    ministry = models.SmallIntegerField(blank=True, null=True)
    monitoring_and_evaluation = models.SmallIntegerField(blank=True, null=True)
    monitoring_evaluation_and_learning = models.SmallIntegerField(blank=True, null=True)
    motivation = models.SmallIntegerField(blank=True, null=True)
    mulitlingual_education = models.SmallIntegerField(blank=True, null=True)
    neo_colonialism = models.SmallIntegerField(blank=True, null=True)
    neo_liberalism = models.SmallIntegerField(blank=True, null=True)
    neocolonialism = models.SmallIntegerField(blank=True, null=True)
    neoliberalism = models.SmallIntegerField(blank=True, null=True)
    non_mother_tongue_language_acquisition = models.SmallIntegerField(blank=True, null=True)
    numeracy = models.SmallIntegerField(blank=True, null=True)
    numeracy_assessment = models.SmallIntegerField(blank=True, null=True)
    opportunity_cost = models.SmallIntegerField(blank=True, null=True)
    outcomes = models.SmallIntegerField(blank=True, null=True)
    pay = models.SmallIntegerField(blank=True, null=True)
    payment = models.SmallIntegerField(blank=True, null=True)
    pedagogy = models.SmallIntegerField(blank=True, null=True)
    personalised_teaching = models.SmallIntegerField(blank=True, null=True)
    philanthropic_foundations = models.SmallIntegerField(blank=True, null=True)
    policy = models.SmallIntegerField(blank=True, null=True)
    private_financial_support = models.SmallIntegerField(blank=True, null=True)
    private_public_partnership = models.SmallIntegerField(blank=True, null=True)
    pro_poor = models.SmallIntegerField(blank=True, null=True)
    problem_based_learning = models.SmallIntegerField(blank=True, null=True)
    profit = models.SmallIntegerField(blank=True, null=True)
    profitability = models.SmallIntegerField(blank=True, null=True)
    public_expenditure_on_education = models.SmallIntegerField(blank=True, null=True)
    public_relations = models.SmallIntegerField(blank=True, null=True)
    reading = models.SmallIntegerField(blank=True, null=True)
    regulation = models.SmallIntegerField(blank=True, null=True)
    remuneration = models.SmallIntegerField(blank=True, null=True)
    resource_allocation = models.SmallIntegerField(blank=True, null=True)
    returns = models.SmallIntegerField(blank=True, null=True)
    rewards = models.SmallIntegerField(blank=True, null=True)
    rural = models.SmallIntegerField(blank=True, null=True)
    salary = models.SmallIntegerField(blank=True, null=True)
    scalabilty = models.SmallIntegerField(blank=True, null=True)
    scholarships = models.SmallIntegerField(blank=True, null=True)
    school_management = models.SmallIntegerField(blank=True, null=True)
    sustainable_development_goals = models.SmallIntegerField(blank=True, null=True)
    service_providers = models.SmallIntegerField(blank=True, null=True)
    socio_culturalism = models.SmallIntegerField(blank=True, null=True)
    socioeconomic_status = models.SmallIntegerField(blank=True, null=True)
    special_needs = models.SmallIntegerField(blank=True, null=True)
    standards = models.SmallIntegerField(blank=True, null=True)
    state_aid = models.SmallIntegerField(blank=True, null=True)
    supply = models.SmallIntegerField(blank=True, null=True)
    sustainability = models.SmallIntegerField(blank=True, null=True)
    sustainable_revenue_streams = models.SmallIntegerField(blank=True, null=True)
    systems = models.SmallIntegerField(blank=True, null=True)
    taxation_regimes = models.SmallIntegerField(blank=True, null=True)
    taxes = models.SmallIntegerField(blank=True, null=True)
    teacher_absenteeism = models.SmallIntegerField(blank=True, null=True)
    teacher_attendance = models.SmallIntegerField(blank=True, null=True)
    teacher_identity = models.SmallIntegerField(blank=True, null=True)
    teacher_motivation = models.SmallIntegerField(blank=True, null=True)
    teaching_approach = models.SmallIntegerField(blank=True, null=True)
    teaching_method = models.SmallIntegerField(blank=True, null=True)
    trade_and_investment_system = models.SmallIntegerField(blank=True, null=True)
    training_needs = models.SmallIntegerField(blank=True, null=True)
    training_pathway = models.SmallIntegerField(blank=True, null=True)
    women = models.SmallIntegerField(blank=True, null=True)
    urban = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'f'


class Gc(models.Model):
    id = models.OneToOneField('Publication', models.DO_NOTHING, db_column='id', primary_key=True)
    abkhazia = models.SmallIntegerField(blank=True, null=True)
    afghanistan = models.SmallIntegerField(blank=True, null=True)
    albania = models.SmallIntegerField(blank=True, null=True)
    algeria = models.SmallIntegerField(blank=True, null=True)
    andorra = models.SmallIntegerField(blank=True, null=True)
    angola = models.SmallIntegerField(blank=True, null=True)
    antiguaandbarbuda = models.SmallIntegerField(blank=True, null=True)
    argentina = models.SmallIntegerField(blank=True, null=True)
    armenia = models.SmallIntegerField(blank=True, null=True)
    artsakh = models.SmallIntegerField(blank=True, null=True)
    australia = models.SmallIntegerField(blank=True, null=True)
    austria = models.SmallIntegerField(blank=True, null=True)
    azerbaijan = models.SmallIntegerField(blank=True, null=True)
    bahamas = models.SmallIntegerField(blank=True, null=True)
    bahrain = models.SmallIntegerField(blank=True, null=True)
    bangladesh = models.SmallIntegerField(blank=True, null=True)
    barbados = models.SmallIntegerField(blank=True, null=True)
    belarus = models.SmallIntegerField(blank=True, null=True)
    belgium = models.SmallIntegerField(blank=True, null=True)
    belize = models.SmallIntegerField(blank=True, null=True)
    benin = models.SmallIntegerField(blank=True, null=True)
    bhutan = models.SmallIntegerField(blank=True, null=True)
    bolivia = models.SmallIntegerField(blank=True, null=True)
    bosniaandherzegovina = models.SmallIntegerField(blank=True, null=True)
    botswana = models.SmallIntegerField(blank=True, null=True)
    brazil = models.SmallIntegerField(blank=True, null=True)
    bruneidarussalam = models.SmallIntegerField(blank=True, null=True)
    bulgaria = models.SmallIntegerField(blank=True, null=True)
    burkinafaso = models.SmallIntegerField(blank=True, null=True)
    burundi = models.SmallIntegerField(blank=True, null=True)
    cambodia = models.SmallIntegerField(blank=True, null=True)
    cameroon = models.SmallIntegerField(blank=True, null=True)
    canada = models.SmallIntegerField(blank=True, null=True)
    capeverde = models.SmallIntegerField(blank=True, null=True)
    catalanrepublic = models.SmallIntegerField(blank=True, null=True)
    centralafricanrepublic = models.SmallIntegerField(blank=True, null=True)
    chad = models.SmallIntegerField(blank=True, null=True)
    chile = models.SmallIntegerField(blank=True, null=True)
    china = models.SmallIntegerField(blank=True, null=True)
    colombia = models.SmallIntegerField(blank=True, null=True)
    comoros = models.SmallIntegerField(blank=True, null=True)
    congo1democratic = models.SmallIntegerField(blank=True, null=True)
    congo2republic = models.SmallIntegerField(blank=True, null=True)
    congo3z = models.SmallIntegerField(blank=True, null=True)
    costarica = models.SmallIntegerField(blank=True, null=True)
    cotedivoire = models.SmallIntegerField(blank=True, null=True)
    croatia = models.SmallIntegerField(blank=True, null=True)
    cuba = models.SmallIntegerField(blank=True, null=True)
    cyprus = models.SmallIntegerField(blank=True, null=True)
    czechrepublic = models.SmallIntegerField(blank=True, null=True)
    denmark = models.SmallIntegerField(blank=True, null=True)
    djibouti = models.SmallIntegerField(blank=True, null=True)
    dominica2dominica = models.SmallIntegerField(blank=True, null=True)
    dominica1nrepublic = models.SmallIntegerField(blank=True, null=True)
    easttimor = models.SmallIntegerField(blank=True, null=True)
    ecuador = models.SmallIntegerField(blank=True, null=True)
    egypt = models.SmallIntegerField(blank=True, null=True)
    elsalvador = models.SmallIntegerField(blank=True, null=True)
    eritrea = models.SmallIntegerField(blank=True, null=True)
    estonia = models.SmallIntegerField(blank=True, null=True)
    eswatini = models.SmallIntegerField(blank=True, null=True)
    ethiopia = models.SmallIntegerField(blank=True, null=True)
    fiji = models.SmallIntegerField(blank=True, null=True)
    finland = models.SmallIntegerField(blank=True, null=True)
    france = models.SmallIntegerField(blank=True, null=True)
    gabon = models.SmallIntegerField(blank=True, null=True)
    gambia = models.SmallIntegerField(blank=True, null=True)
    georgia = models.SmallIntegerField(blank=True, null=True)
    germany = models.SmallIntegerField(blank=True, null=True)
    ghana = models.SmallIntegerField(blank=True, null=True)
    greece = models.SmallIntegerField(blank=True, null=True)
    grenada = models.SmallIntegerField(blank=True, null=True)
    guatemala = models.SmallIntegerField(blank=True, null=True)
    guinea1bissau = models.SmallIntegerField(blank=True, null=True)
    guinea2equatorial = models.SmallIntegerField(blank=True, null=True)
    guinea3 = models.SmallIntegerField(blank=True, null=True)
    guyana = models.SmallIntegerField(blank=True, null=True)
    haiti = models.SmallIntegerField(blank=True, null=True)
    honduras = models.SmallIntegerField(blank=True, null=True)
    hungary = models.SmallIntegerField(blank=True, null=True)
    iceland = models.SmallIntegerField(blank=True, null=True)
    india = models.SmallIntegerField(blank=True, null=True)
    indonesia = models.SmallIntegerField(blank=True, null=True)
    iran = models.SmallIntegerField(blank=True, null=True)
    iraq = models.SmallIntegerField(blank=True, null=True)
    ireland = models.SmallIntegerField(blank=True, null=True)
    israel = models.SmallIntegerField(blank=True, null=True)
    italy = models.SmallIntegerField(blank=True, null=True)
    jamaica = models.SmallIntegerField(blank=True, null=True)
    japan = models.SmallIntegerField(blank=True, null=True)
    jordan = models.SmallIntegerField(blank=True, null=True)
    kazakhstan = models.SmallIntegerField(blank=True, null=True)
    kenya = models.SmallIntegerField(blank=True, null=True)
    kiribati = models.SmallIntegerField(blank=True, null=True)
    korea1north = models.SmallIntegerField(blank=True, null=True)
    korean2republic = models.SmallIntegerField(blank=True, null=True)
    korea3z = models.SmallIntegerField(blank=True, null=True)
    kosovo = models.SmallIntegerField(blank=True, null=True)
    kurdistan = models.SmallIntegerField(blank=True, null=True)
    kuwait = models.SmallIntegerField(blank=True, null=True)
    kyrgyzstan = models.SmallIntegerField(blank=True, null=True)
    laos = models.SmallIntegerField(blank=True, null=True)
    latvia = models.SmallIntegerField(blank=True, null=True)
    lebanon = models.SmallIntegerField(blank=True, null=True)
    lesotho = models.SmallIntegerField(blank=True, null=True)
    liberia = models.SmallIntegerField(blank=True, null=True)
    libya = models.SmallIntegerField(blank=True, null=True)
    liechtenstein = models.SmallIntegerField(blank=True, null=True)
    lithuania = models.SmallIntegerField(blank=True, null=True)
    luxembourg = models.SmallIntegerField(blank=True, null=True)
    madagascar = models.SmallIntegerField(blank=True, null=True)
    malawi = models.SmallIntegerField(blank=True, null=True)
    malaysia = models.SmallIntegerField(blank=True, null=True)
    maldives = models.SmallIntegerField(blank=True, null=True)
    mali = models.SmallIntegerField(blank=True, null=True)
    malta = models.SmallIntegerField(blank=True, null=True)
    marshallislands = models.SmallIntegerField(blank=True, null=True)
    mauritania = models.SmallIntegerField(blank=True, null=True)
    mauritius = models.SmallIntegerField(blank=True, null=True)
    mexico = models.SmallIntegerField(blank=True, null=True)
    micronesia = models.SmallIntegerField(blank=True, null=True)
    moldovan1republicpridnestrovian = models.SmallIntegerField(blank=True, null=True)
    moldova2 = models.SmallIntegerField(blank=True, null=True)
    monaco = models.SmallIntegerField(blank=True, null=True)
    mongolia = models.SmallIntegerField(blank=True, null=True)
    montenegro = models.SmallIntegerField(blank=True, null=True)
    morocco = models.SmallIntegerField(blank=True, null=True)
    mozambique = models.SmallIntegerField(blank=True, null=True)
    myanmar = models.SmallIntegerField(blank=True, null=True)
    namibia = models.SmallIntegerField(blank=True, null=True)
    nauru = models.SmallIntegerField(blank=True, null=True)
    nepal = models.SmallIntegerField(blank=True, null=True)
    netherlands = models.SmallIntegerField(blank=True, null=True)
    newzealand = models.SmallIntegerField(blank=True, null=True)
    nicaragua = models.SmallIntegerField(blank=True, null=True)
    niger = models.SmallIntegerField(blank=True, null=True)
    nigeria = models.SmallIntegerField(blank=True, null=True)
    northcyprus = models.SmallIntegerField(blank=True, null=True)
    northmacedonia = models.SmallIntegerField(blank=True, null=True)
    norway = models.SmallIntegerField(blank=True, null=True)
    oman = models.SmallIntegerField(blank=True, null=True)
    pakistan = models.SmallIntegerField(blank=True, null=True)
    palau = models.SmallIntegerField(blank=True, null=True)
    palestine = models.SmallIntegerField(blank=True, null=True)
    panama = models.SmallIntegerField(blank=True, null=True)
    papuanewguinea = models.SmallIntegerField(blank=True, null=True)
    paraguay = models.SmallIntegerField(blank=True, null=True)
    peru = models.SmallIntegerField(blank=True, null=True)
    philippines = models.SmallIntegerField(blank=True, null=True)
    poland = models.SmallIntegerField(blank=True, null=True)
    portugal = models.SmallIntegerField(blank=True, null=True)
    puntland = models.SmallIntegerField(blank=True, null=True)
    qatar = models.SmallIntegerField(blank=True, null=True)
    romania = models.SmallIntegerField(blank=True, null=True)
    russia = models.SmallIntegerField(blank=True, null=True)
    rwanda = models.SmallIntegerField(blank=True, null=True)
    sahrawiarabdemocraticrepublic = models.SmallIntegerField(blank=True, null=True)
    saintkittsandnevis = models.SmallIntegerField(blank=True, null=True)
    saintlucia = models.SmallIntegerField(blank=True, null=True)
    saintvincentandthegrenadines = models.SmallIntegerField(blank=True, null=True)
    samoa = models.SmallIntegerField(blank=True, null=True)
    sanmarino = models.SmallIntegerField(blank=True, null=True)
    saotomeandprincipe = models.SmallIntegerField(blank=True, null=True)
    saudiarabia = models.SmallIntegerField(blank=True, null=True)
    senegal = models.SmallIntegerField(blank=True, null=True)
    serbia = models.SmallIntegerField(blank=True, null=True)
    seychelles = models.SmallIntegerField(blank=True, null=True)
    sierraleone = models.SmallIntegerField(blank=True, null=True)
    singapore = models.SmallIntegerField(blank=True, null=True)
    slovakia = models.SmallIntegerField(blank=True, null=True)
    slovenia = models.SmallIntegerField(blank=True, null=True)
    solomonislands = models.SmallIntegerField(blank=True, null=True)
    somalia = models.SmallIntegerField(blank=True, null=True)
    somaliland = models.SmallIntegerField(blank=True, null=True)
    southafrica = models.SmallIntegerField(blank=True, null=True)
    southkorea = models.SmallIntegerField(blank=True, null=True)
    southossetia = models.SmallIntegerField(blank=True, null=True)
    southsudan = models.SmallIntegerField(blank=True, null=True)
    spain = models.SmallIntegerField(blank=True, null=True)
    srilanka = models.SmallIntegerField(blank=True, null=True)
    sudan = models.SmallIntegerField(blank=True, null=True)
    suriname = models.SmallIntegerField(blank=True, null=True)
    sweden = models.SmallIntegerField(blank=True, null=True)
    switzerland = models.SmallIntegerField(blank=True, null=True)
    syria = models.SmallIntegerField(blank=True, null=True)
    tajikistan = models.SmallIntegerField(blank=True, null=True)
    tanzania = models.SmallIntegerField(blank=True, null=True)
    thailand = models.SmallIntegerField(blank=True, null=True)
    tibet = models.SmallIntegerField(blank=True, null=True)
    togo = models.SmallIntegerField(blank=True, null=True)
    tonga = models.SmallIntegerField(blank=True, null=True)
    trinidadandtobago = models.SmallIntegerField(blank=True, null=True)
    tunisia = models.SmallIntegerField(blank=True, null=True)
    turkey = models.SmallIntegerField(blank=True, null=True)
    turkmenistan = models.SmallIntegerField(blank=True, null=True)
    tuvalu = models.SmallIntegerField(blank=True, null=True)
    uganda = models.SmallIntegerField(blank=True, null=True)
    ukraine = models.SmallIntegerField(blank=True, null=True)
    unitedarabemirates = models.SmallIntegerField(blank=True, null=True)
    unitedkingdom = models.SmallIntegerField(blank=True, null=True)
    unitedstates = models.SmallIntegerField(blank=True, null=True)
    uruguay = models.SmallIntegerField(blank=True, null=True)
    uzbekistan = models.SmallIntegerField(blank=True, null=True)
    vanuatu = models.SmallIntegerField(blank=True, null=True)
    vaticancity = models.SmallIntegerField(blank=True, null=True)
    venezuela = models.SmallIntegerField(blank=True, null=True)
    vietnam2 = models.SmallIntegerField(blank=True, null=True)
    vietnam1 = models.SmallIntegerField(blank=True, null=True)
    yemen = models.SmallIntegerField(blank=True, null=True)
    zambia = models.SmallIntegerField(blank=True, null=True)
    zimbabwe = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gc'


class Gd(models.Model):
    id = models.OneToOneField('Publication', models.DO_NOTHING, db_column='id', primary_key=True)
    conflict_affected_areas = models.SmallIntegerField(blank=True, null=True)
    conflict_affected_regions = models.SmallIntegerField(blank=True, null=True)
    developing_context = models.SmallIntegerField(blank=True, null=True)
    developing_countries = models.SmallIntegerField(blank=True, null=True)
    developing_country = models.SmallIntegerField(blank=True, null=True)
    developing_economy = models.SmallIntegerField(blank=True, null=True)
    developing_market_countries = models.SmallIntegerField(blank=True, null=True)
    developing_markets = models.SmallIntegerField(blank=True, null=True)
    developing_nation = models.SmallIntegerField(blank=True, null=True)
    developing_region = models.SmallIntegerField(blank=True, null=True)
    developing_state = models.SmallIntegerField(blank=True, null=True)
    developing_world = models.SmallIntegerField(blank=True, null=True)
    emergent_nation = models.SmallIntegerField(blank=True, null=True)
    emerging_economies = models.SmallIntegerField(blank=True, null=True)
    emerging_market_countries = models.SmallIntegerField(blank=True, null=True)
    emerging_nation = models.SmallIntegerField(blank=True, null=True)
    emerging_world = models.SmallIntegerField(blank=True, null=True)
    fragile_and_conflict_affected_areas = models.SmallIntegerField(blank=True, null=True)
    fragile_and_conflict_affected_regions = models.SmallIntegerField(blank=True, null=True)
    fragile_areas = models.SmallIntegerField(blank=True, null=True)
    fragile_contexts = models.SmallIntegerField(blank=True, null=True)
    fragile_regions = models.SmallIntegerField(blank=True, null=True)
    global_south = models.SmallIntegerField(blank=True, null=True)
    growing_economies = models.SmallIntegerField(blank=True, null=True)
    less_developed_countries = models.SmallIntegerField(blank=True, null=True)
    lmic = models.SmallIntegerField(blank=True, null=True)
    low_income_countries1 = models.SmallIntegerField(blank=True, null=True)
    low_income_environment1 = models.SmallIntegerField(blank=True, null=True)
    low_resource_countries1 = models.SmallIntegerField(blank=True, null=True)
    low_resource_environment1 = models.SmallIntegerField(blank=True, null=True)
    low_income_countries2 = models.SmallIntegerField(blank=True, null=True)
    low_income_environment2 = models.SmallIntegerField(blank=True, null=True)
    low_resource_countries2 = models.SmallIntegerField(blank=True, null=True)
    low_resource_environment2 = models.SmallIntegerField(blank=True, null=True)
    middle_income_country = models.SmallIntegerField(blank=True, null=True)
    middle_income_environment = models.SmallIntegerField(blank=True, null=True)
    third_world = models.SmallIntegerField(blank=True, null=True)
    under_developed_countries = models.SmallIntegerField(blank=True, null=True)
    under_developed_nation = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gd'


class Gr(models.Model):
    id = models.OneToOneField('Publication', models.DO_NOTHING, db_column='id', primary_key=True)
    africa = models.SmallIntegerField(blank=True, null=True)
    arab_world = models.SmallIntegerField(blank=True, null=True)
    asia_pacific = models.SmallIntegerField(blank=True, null=True)
    caribbean = models.SmallIntegerField(blank=True, null=True)
    central_africa = models.SmallIntegerField(blank=True, null=True)
    central_america = models.SmallIntegerField(blank=True, null=True)
    central_asia = models.SmallIntegerField(blank=True, null=True)
    east_africa = models.SmallIntegerField(blank=True, null=True)
    east_africa_community = models.SmallIntegerField(blank=True, null=True)
    east_asia = models.SmallIntegerField(blank=True, null=True)
    east_asia_and_pacific = models.SmallIntegerField(blank=True, null=True)
    eastern_africa = models.SmallIntegerField(blank=True, null=True)
    eastern_asia = models.SmallIntegerField(blank=True, null=True)
    europe_and_central_asia = models.SmallIntegerField(blank=True, null=True)
    horn_of_africa = models.SmallIntegerField(blank=True, null=True)
    latin_america = models.SmallIntegerField(blank=True, null=True)
    latin_america_and_caribbean = models.SmallIntegerField(blank=True, null=True)
    middle_africa = models.SmallIntegerField(blank=True, null=True)
    middle_east = models.SmallIntegerField(blank=True, null=True)
    middle_east_and_north_africa = models.SmallIntegerField(blank=True, null=True)
    north_africa = models.SmallIntegerField(blank=True, null=True)
    northern_africa = models.SmallIntegerField(blank=True, null=True)
    pacific = models.SmallIntegerField(blank=True, null=True)
    polynesia = models.SmallIntegerField(blank=True, null=True)
    small_island_development_states = models.SmallIntegerField(blank=True, null=True)
    southern_african_development_community = models.SmallIntegerField(blank=True, null=True)
    south_america = models.SmallIntegerField(blank=True, null=True)
    south_asia = models.SmallIntegerField(blank=True, null=True)
    south_asia_region = models.SmallIntegerField(blank=True, null=True)
    southeast_asia = models.SmallIntegerField(blank=True, null=True)
    southeastern_asia = models.SmallIntegerField(blank=True, null=True)
    southern_africa = models.SmallIntegerField(blank=True, null=True)
    southern_asia = models.SmallIntegerField(blank=True, null=True)
    sub_saharan_africa = models.SmallIntegerField(blank=True, null=True)
    west_africa = models.SmallIntegerField(blank=True, null=True)
    western_africa = models.SmallIntegerField(blank=True, null=True)
    western_asia = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gr'


class O(models.Model):
    id = models.OneToOneField('Publication', models.DO_NOTHING, db_column='id', primary_key=True)
    alison = models.SmallIntegerField(blank=True, null=True)
    brck = models.SmallIntegerField(blank=True, null=True)
    bridge = models.SmallIntegerField(blank=True, null=True)
    ck_12 = models.SmallIntegerField(blank=True, null=True)
    coursera = models.SmallIntegerField(blank=True, null=True)
    dr_maths = models.SmallIntegerField(blank=True, null=True)
    edx = models.SmallIntegerField(blank=True, null=True)
    egyptian_teachers_first_professional_development_program = models.SmallIntegerField(blank=True, null=True)
    ekstep = models.SmallIntegerField(blank=True, null=True)
    emo_haiti = models.SmallIntegerField(blank=True, null=True)
    eneza = models.SmallIntegerField(blank=True, null=True)
    enlaces = models.SmallIntegerField(blank=True, null=True)
    enuma = models.SmallIntegerField(blank=True, null=True)
    foundation_for_learning_equality = models.SmallIntegerField(blank=True, null=True)
    futurelearn = models.SmallIntegerField(blank=True, null=True)
    geekie = models.SmallIntegerField(blank=True, null=True)
    hip2bsquared = models.SmallIntegerField(blank=True, null=True)
    inable = models.SmallIntegerField(blank=True, null=True)
    khan_academy1 = models.SmallIntegerField(blank=True, null=True)
    khan_academy2 = models.SmallIntegerField(blank=True, null=True)
    khanya_project = models.SmallIntegerField(blank=True, null=True)
    kolibri = models.SmallIntegerField(blank=True, null=True)
    lego_project = models.SmallIntegerField(blank=True, null=True)
    mindspark = models.SmallIntegerField(blank=True, null=True)
    mobilearn = models.SmallIntegerField(blank=True, null=True)
    mxit = models.SmallIntegerField(blank=True, null=True)
    nafham = models.SmallIntegerField(blank=True, null=True)
    ole = models.SmallIntegerField(blank=True, null=True)
    one_billion = models.SmallIntegerField(blank=True, null=True)
    one_laptop_per_child = models.SmallIntegerField(blank=True, null=True)
    pratham_books_storyweaver = models.SmallIntegerField(blank=True, null=True)
    retel = models.SmallIntegerField(blank=True, null=True)
    rumie = models.SmallIntegerField(blank=True, null=True)
    scratch = models.SmallIntegerField(blank=True, null=True)
    siyavula = models.SmallIntegerField(blank=True, null=True)
    ted = models.SmallIntegerField(blank=True, null=True)
    the_connected_learning_initiative = models.SmallIntegerField(blank=True, null=True)
    the_egyptian_knowledge_bank = models.SmallIntegerField(blank=True, null=True)
    the_global_digital_library = models.SmallIntegerField(blank=True, null=True)
    the_queen_rania_teacher_academy = models.SmallIntegerField(blank=True, null=True)
    ubongo = models.SmallIntegerField(blank=True, null=True)
    udacity = models.SmallIntegerField(blank=True, null=True)
    university_of_the_people = models.SmallIntegerField(blank=True, null=True)
    worldreader = models.SmallIntegerField(blank=True, null=True)
    xuetangx = models.SmallIntegerField(blank=True, null=True)
    yoza = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'o'


class P1(models.Model):
    id = models.OneToOneField('Publication', models.DO_NOTHING, db_column='id', primary_key=True)
    classroom_assistants = models.SmallIntegerField(blank=True, null=True)
    classroom_instruction = models.SmallIntegerField(blank=True, null=True)
    classroom_teaching = models.SmallIntegerField(blank=True, null=True)
    district_education_officer = models.SmallIntegerField(blank=True, null=True)
    early_childhood_development = models.SmallIntegerField(blank=True, null=True)
    early_childhood_education = models.SmallIntegerField(blank=True, null=True)
    educators = models.SmallIntegerField(blank=True, null=True)
    elementary_education = models.SmallIntegerField(blank=True, null=True)
    elementary_school = models.SmallIntegerField(blank=True, null=True)
    faith_school = models.SmallIntegerField(blank=True, null=True)
    headteacher = models.SmallIntegerField(blank=True, null=True)
    high_school = models.SmallIntegerField(blank=True, null=True)
    junior_middle_school = models.SmallIntegerField(blank=True, null=True)
    junior_school = models.SmallIntegerField(blank=True, null=True)
    k_12 = models.SmallIntegerField(blank=True, null=True)
    kindergarten = models.SmallIntegerField(blank=True, null=True)
    lower_secondary = models.SmallIntegerField(blank=True, null=True)
    middle_school1 = models.SmallIntegerField(blank=True, null=True)
    middle_school2 = models.SmallIntegerField(blank=True, null=True)
    ministry_of_education = models.SmallIntegerField(blank=True, null=True)
    nursery = models.SmallIntegerField(blank=True, null=True)
    post_primary1 = models.SmallIntegerField(blank=True, null=True)
    post_primary2 = models.SmallIntegerField(blank=True, null=True)
    pre_primary1 = models.SmallIntegerField(blank=True, null=True)
    pre_primary2 = models.SmallIntegerField(blank=True, null=True)
    pre_school = models.SmallIntegerField(blank=True, null=True)
    pre_service_teachers = models.SmallIntegerField(blank=True, null=True)
    primary_education = models.SmallIntegerField(blank=True, null=True)
    primary_school = models.SmallIntegerField(blank=True, null=True)
    principal = models.SmallIntegerField(blank=True, null=True)
    private_school = models.SmallIntegerField(blank=True, null=True)
    refugee_educator = models.SmallIntegerField(blank=True, null=True)
    school = models.SmallIntegerField(blank=True, null=True)
    school_administrator = models.SmallIntegerField(blank=True, null=True)
    school_authority = models.SmallIntegerField(blank=True, null=True)
    school_director = models.SmallIntegerField(blank=True, null=True)
    school_governing_body = models.SmallIntegerField(blank=True, null=True)
    school_head = models.SmallIntegerField(blank=True, null=True)
    school_leadership_team = models.SmallIntegerField(blank=True, null=True)
    school_management_team = models.SmallIntegerField(blank=True, null=True)
    school_offical = models.SmallIntegerField(blank=True, null=True)
    school_principal = models.SmallIntegerField(blank=True, null=True)
    school_supervisor = models.SmallIntegerField(blank=True, null=True)
    school_teacher = models.SmallIntegerField(blank=True, null=True)
    secondary_education = models.SmallIntegerField(blank=True, null=True)
    secondary_school = models.SmallIntegerField(blank=True, null=True)
    senior_leadership_team = models.SmallIntegerField(blank=True, null=True)
    state_school = models.SmallIntegerField(blank=True, null=True)
    teacher_candidates = models.SmallIntegerField(blank=True, null=True)
    teacher_certificate = models.SmallIntegerField(blank=True, null=True)
    teacher_cop = models.SmallIntegerField(blank=True, null=True)
    teacher_education = models.SmallIntegerField(blank=True, null=True)
    teacher_professional_development = models.SmallIntegerField(blank=True, null=True)
    teacher_training = models.SmallIntegerField(blank=True, null=True)
    teacher_training_centre = models.SmallIntegerField(blank=True, null=True)
    teacher_training_college = models.SmallIntegerField(blank=True, null=True)
    teacher_training_institute = models.SmallIntegerField(blank=True, null=True)
    teachers = models.SmallIntegerField(blank=True, null=True)
    teaching_assistant = models.SmallIntegerField(blank=True, null=True)
    teaching_assistants = models.SmallIntegerField(blank=True, null=True)
    teaching_certificate = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'p1'


class P2(models.Model):
    id = models.OneToOneField('Publication', models.DO_NOTHING, db_column='id', primary_key=True)
    accessible_learning = models.SmallIntegerField(blank=True, null=True)
    alien = models.SmallIntegerField(blank=True, null=True)
    alienation = models.SmallIntegerField(blank=True, null=True)
    asylum = models.SmallIntegerField(blank=True, null=True)
    asylum_seeker = models.SmallIntegerField(blank=True, null=True)
    at_risk_population = models.SmallIntegerField(blank=True, null=True)
    bachelors_degree1 = models.SmallIntegerField(blank=True, null=True)
    bachelors_degree2 = models.SmallIntegerField(blank=True, null=True)
    career_entry_support1 = models.SmallIntegerField(blank=True, null=True)
    career_entry_support2 = models.SmallIntegerField(blank=True, null=True)
    career_path_training = models.SmallIntegerField(blank=True, null=True)
    church = models.SmallIntegerField(blank=True, null=True)
    community_education = models.SmallIntegerField(blank=True, null=True)
    competency_based_training = models.SmallIntegerField(blank=True, null=True)
    continuing_education = models.SmallIntegerField(blank=True, null=True)
    continuing_training = models.SmallIntegerField(blank=True, null=True)
    continuous_professional_development = models.SmallIntegerField(blank=True, null=True)
    degree = models.SmallIntegerField(blank=True, null=True)
    diploma = models.SmallIntegerField(blank=True, null=True)
    disabilities = models.SmallIntegerField(blank=True, null=True)
    disability = models.SmallIntegerField(blank=True, null=True)
    district_level = models.SmallIntegerField(blank=True, null=True)
    displaced_person = models.SmallIntegerField(blank=True, null=True)
    displaced_populations = models.SmallIntegerField(blank=True, null=True)
    education = models.SmallIntegerField(blank=True, null=True)
    education_in_emergencies = models.SmallIntegerField(blank=True, null=True)
    favela = models.SmallIntegerField(blank=True, null=True)
    fragility_in_education = models.SmallIntegerField(blank=True, null=True)
    gang_members = models.SmallIntegerField(blank=True, null=True)
    geographically_dispersed = models.SmallIntegerField(blank=True, null=True)
    in_service_training = models.SmallIntegerField(blank=True, null=True)
    informal_education = models.SmallIntegerField(blank=True, null=True)
    informal_learning = models.SmallIntegerField(blank=True, null=True)
    informal_training = models.SmallIntegerField(blank=True, null=True)
    language_learning = models.SmallIntegerField(blank=True, null=True)
    learning_community = models.SmallIntegerField(blank=True, null=True)
    masters_degree = models.SmallIntegerField(blank=True, null=True)
    masters = models.SmallIntegerField(blank=True, null=True)
    math = models.SmallIntegerField(blank=True, null=True)
    mathematics = models.SmallIntegerField(blank=True, null=True)
    migrant = models.SmallIntegerField(blank=True, null=True)
    minority_ethnic_group = models.SmallIntegerField(blank=True, null=True)
    mosque = models.SmallIntegerField(blank=True, null=True)
    moving_populations = models.SmallIntegerField(blank=True, null=True)
    natural_science = models.SmallIntegerField(blank=True, null=True)
    non_formal_education = models.SmallIntegerField(blank=True, null=True)
    non_formal_learning = models.SmallIntegerField(blank=True, null=True)
    postsecondary_education = models.SmallIntegerField(blank=True, null=True)
    pre_service_training = models.SmallIntegerField(blank=True, null=True)
    professional_continuing_education = models.SmallIntegerField(blank=True, null=True)
    professional_education = models.SmallIntegerField(blank=True, null=True)
    professional_learning_community = models.SmallIntegerField(blank=True, null=True)
    professional_qualification = models.SmallIntegerField(blank=True, null=True)
    professional_re_education = models.SmallIntegerField(blank=True, null=True)
    professional_studies = models.SmallIntegerField(blank=True, null=True)
    professional_training = models.SmallIntegerField(blank=True, null=True)
    qualification = models.SmallIntegerField(blank=True, null=True)
    refugee_education = models.SmallIntegerField(blank=True, null=True)
    refugee_learning = models.SmallIntegerField(blank=True, null=True)
    science = models.SmallIntegerField(blank=True, null=True)
    science_and_technology = models.SmallIntegerField(blank=True, null=True)
    science_technology_engineering_and_applied_mathematics = models.SmallIntegerField(blank=True, null=True)
    science_technology_engineering_and_mathematics = models.SmallIntegerField(blank=True, null=True)
    slum = models.SmallIntegerField(blank=True, null=True)
    special_educational_needs = models.SmallIntegerField(blank=True, null=True)
    sen_learner = models.SmallIntegerField(blank=True, null=True)
    sen_student = models.SmallIntegerField(blank=True, null=True)
    special_educational_needs_and_disabilities = models.SmallIntegerField(blank=True, null=True)
    special_needs_students = models.SmallIntegerField(blank=True, null=True)
    street_children = models.SmallIntegerField(blank=True, null=True)
    students = models.SmallIntegerField(blank=True, null=True)
    students_with_disabilities = models.SmallIntegerField(blank=True, null=True)
    technical_training = models.SmallIntegerField(blank=True, null=True)
    technical_and_vocational_education_and_training = models.SmallIntegerField(blank=True, null=True)
    vocational_training = models.SmallIntegerField(blank=True, null=True)
    young_people = models.SmallIntegerField(blank=True, null=True)
    youth = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'p2'


class R(models.Model):
    id = models.OneToOneField('Publication', models.DO_NOTHING, db_column='id', primary_key=True)
    action_research = models.SmallIntegerField(blank=True, null=True)
    adaptive = models.SmallIntegerField(blank=True, null=True)
    agile = models.SmallIntegerField(blank=True, null=True)
    anarchy = models.SmallIntegerField(blank=True, null=True)
    case_study = models.SmallIntegerField(blank=True, null=True)
    citizen_science = models.SmallIntegerField(blank=True, null=True)
    correlation = models.SmallIntegerField(blank=True, null=True)
    critical_realism = models.SmallIntegerField(blank=True, null=True)
    critical_theory = models.SmallIntegerField(blank=True, null=True)
    design_based_implementation_research = models.SmallIntegerField(blank=True, null=True)
    design_based_research = models.SmallIntegerField(blank=True, null=True)
    deductive = models.SmallIntegerField(blank=True, null=True)
    difference_in_differences = models.SmallIntegerField(blank=True, null=True)
    engineering_based_research = models.SmallIntegerField(blank=True, null=True)
    evaluation = models.SmallIntegerField(blank=True, null=True)
    experimental_design = models.SmallIntegerField(blank=True, null=True)
    focus_groups = models.SmallIntegerField(blank=True, null=True)
    formative_research = models.SmallIntegerField(blank=True, null=True)
    grounded_theory = models.SmallIntegerField(blank=True, null=True)
    group_discussions = models.SmallIntegerField(blank=True, null=True)
    hermeneutics = models.SmallIntegerField(blank=True, null=True)
    historical = models.SmallIntegerField(blank=True, null=True)
    impact = models.SmallIntegerField(blank=True, null=True)
    inductive = models.SmallIntegerField(blank=True, null=True)
    interview = models.SmallIntegerField(blank=True, null=True)
    iterative = models.SmallIntegerField(blank=True, null=True)
    lean = models.SmallIntegerField(blank=True, null=True)
    learning_analytics = models.SmallIntegerField(blank=True, null=True)
    literature_analysis = models.SmallIntegerField(blank=True, null=True)
    literature_review = models.SmallIntegerField(blank=True, null=True)
    long_interview = models.SmallIntegerField(blank=True, null=True)
    meta_analysis = models.SmallIntegerField(blank=True, null=True)
    mixed_method = models.SmallIntegerField(blank=True, null=True)
    modelling = models.SmallIntegerField(blank=True, null=True)
    observation = models.SmallIntegerField(blank=True, null=True)
    participatory_video = models.SmallIntegerField(blank=True, null=True)
    positivist = models.SmallIntegerField(blank=True, null=True)
    quasi_experimental_design = models.SmallIntegerField(blank=True, null=True)
    qualitative = models.SmallIntegerField(blank=True, null=True)
    quantitative = models.SmallIntegerField(blank=True, null=True)
    questionnaire = models.SmallIntegerField(blank=True, null=True)
    randomised_control_trial = models.SmallIntegerField(blank=True, null=True)
    regression = models.SmallIntegerField(blank=True, null=True)
    regression_discontinuity_design = models.SmallIntegerField(blank=True, null=True)
    research_design = models.SmallIntegerField(blank=True, null=True)
    research_method = models.SmallIntegerField(blank=True, null=True)
    rich_text_analysis = models.SmallIntegerField(blank=True, null=True)
    semi_structured_interview = models.SmallIntegerField(blank=True, null=True)
    structured_interview = models.SmallIntegerField(blank=True, null=True)
    survey = models.SmallIntegerField(blank=True, null=True)
    synthesis = models.SmallIntegerField(blank=True, null=True)
    systematic_review = models.SmallIntegerField(blank=True, null=True)
    tracer_study = models.SmallIntegerField(blank=True, null=True)
    trial = models.SmallIntegerField(blank=True, null=True)
    unstructured_interview = models.SmallIntegerField(blank=True, null=True)
    usability = models.SmallIntegerField(blank=True, null=True)
    video = models.SmallIntegerField(blank=True, null=True)
    program_evaluation = models.SmallIntegerField(blank=True, null=True)
    programme_evaluation = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'r'


class Te(models.Model):
    id = models.OneToOneField('Publication', models.DO_NOTHING, db_column='id', primary_key=True)
    electronic_whiteboard = models.SmallIntegerField(blank=True, null=True)
    interactive_whiteboard = models.SmallIntegerField(blank=True, null=True)
    smart_board = models.SmallIntegerField(blank=True, null=True)
    smartboard = models.SmallIntegerField(blank=True, null=True)
    electronic_textbook = models.SmallIntegerField(blank=True, null=True)
    etutor = models.SmallIntegerField(blank=True, null=True)
    free_digital_resources = models.SmallIntegerField(blank=True, null=True)
    intelligent_agent = models.SmallIntegerField(blank=True, null=True)
    intelligent_tutoring_system = models.SmallIntegerField(blank=True, null=True)
    learning_platform = models.SmallIntegerField(blank=True, null=True)
    massive_open_online_course = models.SmallIntegerField(blank=True, null=True)
    moodle = models.SmallIntegerField(blank=True, null=True)
    open_educational_resources = models.SmallIntegerField(blank=True, null=True)
    online_textbook = models.SmallIntegerField(blank=True, null=True)
    online_tutor = models.SmallIntegerField(blank=True, null=True)
    reusable_learning_object = models.SmallIntegerField(blank=True, null=True)
    school_website = models.SmallIntegerField(blank=True, null=True)
    edtech = models.SmallIntegerField(blank=True, null=True)
    educational_innovation = models.SmallIntegerField(blank=True, null=True)
    educational_technologies = models.SmallIntegerField(blank=True, null=True)
    emerging_education_technologies = models.SmallIntegerField(blank=True, null=True)
    emerging_education_technology = models.SmallIntegerField(blank=True, null=True)
    ict_in_classrooms = models.SmallIntegerField(blank=True, null=True)
    ict_in_the_classroom = models.SmallIntegerField(blank=True, null=True)
    technology_at_school = models.SmallIntegerField(blank=True, null=True)
    technology_in_education = models.SmallIntegerField(blank=True, null=True)
    technology_in_school = models.SmallIntegerField(blank=True, null=True)
    technology_use_in_education = models.SmallIntegerField(blank=True, null=True)
    adaptive_learning = models.SmallIntegerField(blank=True, null=True)
    asynchronous_learning = models.SmallIntegerField(blank=True, null=True)
    blended_learning = models.SmallIntegerField(blank=True, null=True)
    computer_assisted_instruction1 = models.SmallIntegerField(blank=True, null=True)
    computer_assisted_instruction2 = models.SmallIntegerField(blank=True, null=True)
    computer_assisted_learning = models.SmallIntegerField(blank=True, null=True)
    computer_based_assessment = models.SmallIntegerField(blank=True, null=True)
    computer_based_instruction = models.SmallIntegerField(blank=True, null=True)
    computer_managed_instruction = models.SmallIntegerField(blank=True, null=True)
    computer_mediated_learning = models.SmallIntegerField(blank=True, null=True)
    computer_supported_collaborative_learning = models.SmallIntegerField(blank=True, null=True)
    computer_supported_education = models.SmallIntegerField(blank=True, null=True)
    computer_assisted_instructional_programme = models.SmallIntegerField(blank=True, null=True)
    computerised_learning = models.SmallIntegerField(blank=True, null=True)
    connected_learning = models.SmallIntegerField(blank=True, null=True)
    differentiated_learning = models.SmallIntegerField(blank=True, null=True)
    digital_learning = models.SmallIntegerField(blank=True, null=True)
    distance_education = models.SmallIntegerField(blank=True, null=True)
    distance_learning = models.SmallIntegerField(blank=True, null=True)
    distance_learning_program = models.SmallIntegerField(blank=True, null=True)
    distributed_learning = models.SmallIntegerField(blank=True, null=True)
    e_learning = models.SmallIntegerField(blank=True, null=True)
    electronic_classroom = models.SmallIntegerField(blank=True, null=True)
    flipped_classroom = models.SmallIntegerField(blank=True, null=True)
    flipped_learning = models.SmallIntegerField(blank=True, null=True)
    free_digital_learning = models.SmallIntegerField(blank=True, null=True)
    gamification = models.SmallIntegerField(blank=True, null=True)
    hybrid_learning = models.SmallIntegerField(blank=True, null=True)
    individualised_learning = models.SmallIntegerField(blank=True, null=True)
    instructional_innovation = models.SmallIntegerField(blank=True, null=True)
    instructional_technology = models.SmallIntegerField(blank=True, null=True)
    integrated_learning_systems = models.SmallIntegerField(blank=True, null=True)
    interactive_learning_environment = models.SmallIntegerField(blank=True, null=True)
    learning = models.SmallIntegerField(blank=True, null=True)
    media_literacy = models.SmallIntegerField(blank=True, null=True)
    microlearning = models.SmallIntegerField(blank=True, null=True)
    mobile_education = models.SmallIntegerField(blank=True, null=True)
    mobile_learning = models.SmallIntegerField(blank=True, null=True)
    multimedia_instruction = models.SmallIntegerField(blank=True, null=True)
    open_and_distance_elearning = models.SmallIntegerField(blank=True, null=True)
    open_and_distance_learning = models.SmallIntegerField(blank=True, null=True)
    online_course = models.SmallIntegerField(blank=True, null=True)
    online_lab = models.SmallIntegerField(blank=True, null=True)
    online_laboratory = models.SmallIntegerField(blank=True, null=True)
    online_learning = models.SmallIntegerField(blank=True, null=True)
    open_education = models.SmallIntegerField(blank=True, null=True)
    open_learning = models.SmallIntegerField(blank=True, null=True)
    personalised_learning = models.SmallIntegerField(blank=True, null=True)
    personalised_teaching = models.SmallIntegerField(blank=True, null=True)
    plasma_based_instruction = models.SmallIntegerField(blank=True, null=True)
    self_directed_learning = models.SmallIntegerField(blank=True, null=True)
    self_paced_learning = models.SmallIntegerField(blank=True, null=True)
    synchronous_online_learning = models.SmallIntegerField(blank=True, null=True)
    technological_pedagogical_content = models.SmallIntegerField(blank=True, null=True)
    technology_assisted_learning1 = models.SmallIntegerField(blank=True, null=True)
    technology_engagement_teaching_strategy = models.SmallIntegerField(blank=True, null=True)
    technology_enhanced_learning = models.SmallIntegerField(blank=True, null=True)
    technology_integration = models.SmallIntegerField(blank=True, null=True)
    technology_assisted_learning2 = models.SmallIntegerField(blank=True, null=True)
    tele_education = models.SmallIntegerField(blank=True, null=True)
    virtual_classroom = models.SmallIntegerField(blank=True, null=True)
    virtual_learning = models.SmallIntegerField(blank=True, null=True)
    virtual_learning_environment = models.SmallIntegerField(blank=True, null=True)
    virtual_school = models.SmallIntegerField(blank=True, null=True)
    web_based_instruction = models.SmallIntegerField(blank=True, null=True)
    webinar = models.SmallIntegerField(blank=True, null=True)
    course_management_system = models.SmallIntegerField(blank=True, null=True)
    education_management_information_system = models.SmallIntegerField(blank=True, null=True)
    examination_systems = models.SmallIntegerField(blank=True, null=True)
    learning_management_systems = models.SmallIntegerField(blank=True, null=True)
    teacher_development_software = models.SmallIntegerField(blank=True, null=True)
    textbook_analytics = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'te'


class Tt(models.Model):
    id = models.OneToOneField('Publication', models.DO_NOTHING, db_column='id', primary_key=True)
    field_3d_printer = models.SmallIntegerField(db_column='_3d_printer', blank=True, null=True)  # Field renamed because it started with '_'.
    field_3d_printing = models.SmallIntegerField(db_column='_3d_printing', blank=True, null=True)  # Field renamed because it started with '_'.
    access_to_computers = models.SmallIntegerField(blank=True, null=True)
    accessible_technologies = models.SmallIntegerField(blank=True, null=True)
    alternative_communication = models.SmallIntegerField(blank=True, null=True)
    android = models.SmallIntegerField(blank=True, null=True)
    app = models.SmallIntegerField(blank=True, null=True)
    apple = models.SmallIntegerField(blank=True, null=True)
    assistive_technology = models.SmallIntegerField(blank=True, null=True)
    audio_recording = models.SmallIntegerField(blank=True, null=True)
    augmentative_communication = models.SmallIntegerField(blank=True, null=True)
    bada = models.SmallIntegerField(blank=True, null=True)
    bandwidth = models.SmallIntegerField(blank=True, null=True)
    barriers_to_technology = models.SmallIntegerField(blank=True, null=True)
    big_data = models.SmallIntegerField(blank=True, null=True)
    blackberry = models.SmallIntegerField(blank=True, null=True)
    blog = models.SmallIntegerField(blank=True, null=True)
    camera = models.SmallIntegerField(blank=True, null=True)
    cellphone = models.SmallIntegerField(blank=True, null=True)
    chatbot = models.SmallIntegerField(blank=True, null=True)
    clicker_technology = models.SmallIntegerField(blank=True, null=True)
    clickers = models.SmallIntegerField(blank=True, null=True)
    cloud = models.SmallIntegerField(blank=True, null=True)
    cmc = models.SmallIntegerField(blank=True, null=True)
    computational_thinking_literacy = models.SmallIntegerField(blank=True, null=True)
    computer = models.SmallIntegerField(blank=True, null=True)
    computer_illiteracy = models.SmallIntegerField(blank=True, null=True)
    computer_literacy = models.SmallIntegerField(blank=True, null=True)
    computer_mediated_communication = models.SmallIntegerField(blank=True, null=True)
    computerised = models.SmallIntegerField(blank=True, null=True)
    computers_on_wheels = models.SmallIntegerField(blank=True, null=True)
    connectivity = models.SmallIntegerField(blank=True, null=True)
    ct_literacy = models.SmallIntegerField(blank=True, null=True)
    data = models.SmallIntegerField(blank=True, null=True)
    digital_communication = models.SmallIntegerField(blank=True, null=True)
    digital_content = models.SmallIntegerField(blank=True, null=True)
    digital_divide = models.SmallIntegerField(blank=True, null=True)
    digital_exclusion = models.SmallIntegerField(blank=True, null=True)
    digital_immigrants = models.SmallIntegerField(blank=True, null=True)
    digital_inclusion = models.SmallIntegerField(blank=True, null=True)
    digital_literacy = models.SmallIntegerField(blank=True, null=True)
    digital_native = models.SmallIntegerField(blank=True, null=True)
    digital_resources = models.SmallIntegerField(blank=True, null=True)
    digital_scrapbook = models.SmallIntegerField(blank=True, null=True)
    digital_skills = models.SmallIntegerField(blank=True, null=True)
    digital_storytelling = models.SmallIntegerField(blank=True, null=True)
    digital_technology = models.SmallIntegerField(blank=True, null=True)
    digital_transformation = models.SmallIntegerField(blank=True, null=True)
    digitalised = models.SmallIntegerField(blank=True, null=True)
    digitised = models.SmallIntegerField(blank=True, null=True)
    discord = models.SmallIntegerField(blank=True, null=True)
    disruptive_technology = models.SmallIntegerField(blank=True, null=True)
    douban = models.SmallIntegerField(blank=True, null=True)
    douyin = models.SmallIntegerField(blank=True, null=True)
    dvd_player = models.SmallIntegerField(blank=True, null=True)
    e_book = models.SmallIntegerField(blank=True, null=True)
    e_reader = models.SmallIntegerField(blank=True, null=True)
    earphones = models.SmallIntegerField(blank=True, null=True)
    ebook = models.SmallIntegerField(blank=True, null=True)
    ereader = models.SmallIntegerField(blank=True, null=True)
    facebook = models.SmallIntegerField(blank=True, null=True)
    gadget = models.SmallIntegerField(blank=True, null=True)
    game_console = models.SmallIntegerField(blank=True, null=True)
    garnet = models.SmallIntegerField(blank=True, null=True)
    geographical_information_systems = models.SmallIntegerField(blank=True, null=True)
    hardware = models.SmallIntegerField(blank=True, null=True)
    headphones = models.SmallIntegerField(blank=True, null=True)
    holograms = models.SmallIntegerField(blank=True, null=True)
    i_pad = models.SmallIntegerField(blank=True, null=True)
    ict = models.SmallIntegerField(blank=True, null=True)
    inclusive_technologies = models.SmallIntegerField(blank=True, null=True)
    influence_of_technology = models.SmallIntegerField(blank=True, null=True)
    information_communications_technology_literacy = models.SmallIntegerField(blank=True, null=True)
    information_literacy = models.SmallIntegerField(blank=True, null=True)
    instagram = models.SmallIntegerField(blank=True, null=True)
    instructional_systems = models.SmallIntegerField(blank=True, null=True)
    integration_of_technology = models.SmallIntegerField(blank=True, null=True)
    intel = models.SmallIntegerField(blank=True, null=True)
    interactive = models.SmallIntegerField(blank=True, null=True)
    internet = models.SmallIntegerField(blank=True, null=True)
    internet_access = models.SmallIntegerField(blank=True, null=True)
    internet_domain = models.SmallIntegerField(blank=True, null=True)
    internet_of_things = models.SmallIntegerField(blank=True, null=True)
    ios = models.SmallIntegerField(blank=True, null=True)
    ipad = models.SmallIntegerField(blank=True, null=True)
    iphone = models.SmallIntegerField(blank=True, null=True)
    information_technology = models.SmallIntegerField(blank=True, null=True)
    keyboard = models.SmallIntegerField(blank=True, null=True)
    kindle = models.SmallIntegerField(blank=True, null=True)
    laptop = models.SmallIntegerField(blank=True, null=True)
    linkedin = models.SmallIntegerField(blank=True, null=True)
    maemo = models.SmallIntegerField(blank=True, null=True)
    meego = models.SmallIntegerField(blank=True, null=True)
    metadata = models.SmallIntegerField(blank=True, null=True)
    microsoft = models.SmallIntegerField(blank=True, null=True)
    mobile_phone = models.SmallIntegerField(blank=True, null=True)
    new_media = models.SmallIntegerField(blank=True, null=True)
    new_technologies = models.SmallIntegerField(blank=True, null=True)
    offline = models.SmallIntegerField(blank=True, null=True)
    online = models.SmallIntegerField(blank=True, null=True)
    online_discussion = models.SmallIntegerField(blank=True, null=True)
    open_source = models.SmallIntegerField(blank=True, null=True)
    open_source_software = models.SmallIntegerField(blank=True, null=True)
    open_wedos = models.SmallIntegerField(blank=True, null=True)
    operating_system = models.SmallIntegerField(blank=True, null=True)
    palm_os = models.SmallIntegerField(blank=True, null=True)
    pinterest = models.SmallIntegerField(blank=True, null=True)
    platform = models.SmallIntegerField(blank=True, null=True)
    podcast = models.SmallIntegerField(blank=True, null=True)
    poll_everywhere = models.SmallIntegerField(blank=True, null=True)
    printer = models.SmallIntegerField(blank=True, null=True)
    qq = models.SmallIntegerField(blank=True, null=True)
    qzone = models.SmallIntegerField(blank=True, null=True)
    rachel = models.SmallIntegerField(blank=True, null=True)
    rachel_server = models.SmallIntegerField(blank=True, null=True)
    radio = models.SmallIntegerField(blank=True, null=True)
    raspberry_pi = models.SmallIntegerField(blank=True, null=True)
    reddit = models.SmallIntegerField(blank=True, null=True)
    sd_card = models.SmallIntegerField(blank=True, null=True)
    simulation = models.SmallIntegerField(blank=True, null=True)
    sina_weibo = models.SmallIntegerField(blank=True, null=True)
    single_board_computer = models.SmallIntegerField(blank=True, null=True)
    snapchat = models.SmallIntegerField(blank=True, null=True)
    social_media = models.SmallIntegerField(blank=True, null=True)
    social_network = models.SmallIntegerField(blank=True, null=True)
    social_networking_sites = models.SmallIntegerField(blank=True, null=True)
    software = models.SmallIntegerField(blank=True, null=True)
    supportive_technology = models.SmallIntegerField(blank=True, null=True)
    symbian = models.SmallIntegerField(blank=True, null=True)
    tablet = models.SmallIntegerField(blank=True, null=True)
    technological_literacy = models.SmallIntegerField(blank=True, null=True)
    technology_leapfrogging = models.SmallIntegerField(blank=True, null=True)
    technology_enhanced = models.SmallIntegerField(blank=True, null=True)
    telephone = models.SmallIntegerField(blank=True, null=True)
    television = models.SmallIntegerField(blank=True, null=True)
    tiktok = models.SmallIntegerField(blank=True, null=True)
    twitter = models.SmallIntegerField(blank=True, null=True)
    verdict = models.SmallIntegerField(blank=True, null=True)
    viber = models.SmallIntegerField(blank=True, null=True)
    video_recorder = models.SmallIntegerField(blank=True, null=True)
    videoconferencing = models.SmallIntegerField(blank=True, null=True)
    virtual_peer = models.SmallIntegerField(blank=True, null=True)
    virtual_reality = models.SmallIntegerField(blank=True, null=True)
    web = models.SmallIntegerField(blank=True, null=True)
    wechat = models.SmallIntegerField(blank=True, null=True)
    whatsapp = models.SmallIntegerField(blank=True, null=True)
    wifi = models.SmallIntegerField(blank=True, null=True)
    wikipedia = models.SmallIntegerField(blank=True, null=True)
    windows = models.SmallIntegerField(blank=True, null=True)
    youtube = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tt'

class Relevance(models.Model):
    id = models.OneToOneField('Publication', models.DO_NOTHING, db_column='id', primary_key=True)
    g = models.SmallIntegerField(blank=True, null=True)
    t = models.SmallIntegerField(blank=True, null=True)
    x = models.SmallIntegerField(blank=True, null=True)
    relevance = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'relevance'