from django.db.models import Q
from django.db import connection
from django.contrib.postgres.search import SearchQuery

import re

search_filter_GC_GR = {
    "abkhazia": Q(gc__abkhazia__gt=0),
    "afghanistan": Q(gc__afghanistan__gt=0),
    "albania": Q(gc__albania__gt=0),
    "algeria": Q(gc__algeria__gt=0),
    "andorra": Q(gc__andorra__gt=0),
    "angola": Q(gc__angola__gt=0),
    "antiguaandbarbuda": Q(gc__antiguaandbarbuda__gt=0),
    "argentina": Q(gc__argentina__gt=0),
    "armenia": Q(gc__armenia__gt=0),
    "artsakh": Q(gc__artsakh__gt=0),
    "australia": Q(gc__australia__gt=0),
    "austria": Q(gc__austria__gt=0),
    "azerbaijan": Q(gc__azerbaijan__gt=0),
    "bahamas": Q(gc__bahamas__gt=0),
    "bahrain": Q(gc__bahrain__gt=0),
    "bangladesh": Q(gc__bangladesh__gt=0),
    "barbados": Q(gc__barbados__gt=0),
    "belarus": Q(gc__belarus__gt=0),
    "belgium": Q(gc__belgium__gt=0),
    "belize": Q(gc__belize__gt=0),
    "benin": Q(gc__benin__gt=0),
    "bhutan": Q(gc__bhutan__gt=0),
    "bolivia": Q(gc__bolivia__gt=0),
    "bosniaandherzegovina": Q(gc__bosniaandherzegovina__gt=0),
    "botswana": Q(gc__botswana__gt=0),
    "brazil": Q(gc__brazil__gt=0),
    "bruneidarussalam": Q(gc__bruneidarussalam__gt=0),
    "bulgaria": Q(gc__bulgaria__gt=0),
    "burkinafaso": Q(gc__burkinafaso__gt=0),
    "burundi": Q(gc__burundi__gt=0),
    "cambodia": Q(gc__cambodia__gt=0),
    "cameroon": Q(gc__cameroon__gt=0),
    "canada": Q(gc__canada__gt=0),
    "capeverde": Q(gc__capeverde__gt=0),
    "catalanrepublic": Q(gc__catalanrepublic__gt=0),
    "centralafricanrepublic": Q(gc__centralafricanrepublic__gt=0),
    "chad": Q(gc__chad__gt=0),
    "chile": Q(gc__chile__gt=0),
    "china": Q(gc__china__gt=0),
    "colombia": Q(gc__colombia__gt=0),
    "comoros": Q(gc__comoros__gt=0),
    "congo1democratic": Q(gc__congo1democratic__gt=0),
    "congo2republic": Q(gc__congo2republic__gt=0),
    "congo3z": Q(gc__congo3z__gt=0),
    "costarica": Q(gc__costarica__gt=0),
    "cotedivoire": Q(gc__cotedivoire__gt=0),
    "croatia": Q(gc__croatia__gt=0),
    "cuba": Q(gc__cuba__gt=0),
    "cyprus": Q(gc__cyprus__gt=0),
    "czechrepublic": Q(gc__czechrepublic__gt=0),
    "denmark": Q(gc__denmark__gt=0),
    "djibouti": Q(gc__djibouti__gt=0),
    "dominica2dominica": Q(gc__dominica2dominica__gt=0),
    "dominica1nrepublic": Q(gc__dominica1nrepublic__gt=0),
    "easttimor": Q(gc__easttimor__gt=0),
    "ecuador": Q(gc__ecuador__gt=0),
    "egypt": Q(gc__egypt__gt=0),
    "elsalvador": Q(gc__elsalvador__gt=0),
    "eritrea": Q(gc__eritrea__gt=0),
    "estonia": Q(gc__estonia__gt=0),
    "eswatini": Q(gc__eswatini__gt=0),
    "ethiopia": Q(gc__ethiopia__gt=0),
    "fiji": Q(gc__fiji__gt=0),
    "finland": Q(gc__finland__gt=0),
    "france": Q(gc__france__gt=0),
    "gabon": Q(gc__gabon__gt=0),
    "gambia": Q(gc__gambia__gt=0),
    "georgia": Q(gc__georgia__gt=0),
    "germany": Q(gc__germany__gt=0),
    "ghana": Q(gc__ghana__gt=0),
    "greece": Q(gc__greece__gt=0),
    "grenada": Q(gc__grenada__gt=0),
    "guatemala": Q(gc__guatemala__gt=0),
    "guinea1bissau": Q(gc__guinea1bissau__gt=0),
    "guinea2equatorial": Q(gc__guinea2equatorial__gt=0),
    "guinea3": Q(gc__guinea3__gt=0),
    "guyana": Q(gc__guyana__gt=0),
    "haiti": Q(gc__haiti__gt=0),
    "honduras": Q(gc__honduras__gt=0),
    "hungary": Q(gc__hungary__gt=0),
    "iceland": Q(gc__iceland__gt=0),
    "india": Q(gc__india__gt=0),
    "indonesia": Q(gc__indonesia__gt=0),
    "iran": Q(gc__iran__gt=0),
    "iraq": Q(gc__iraq__gt=0),
    "ireland": Q(gc__ireland__gt=0),
    "israel": Q(gc__israel__gt=0),
    "italy": Q(gc__italy__gt=0),
    "jamaica": Q(gc__jamaica__gt=0),
    "japan": Q(gc__japan__gt=0),
    "jordan": Q(gc__jordan__gt=0),
    "kazakhstan": Q(gc__kazakhstan__gt=0),
    "kenya": Q(gc__kenya__gt=0),
    "kiribati": Q(gc__kiribati__gt=0),
    "korea1north": Q(gc__korea1north__gt=0),
    "korean2republic": Q(gc__korean2republic__gt=0),
    "korea3z": Q(gc__korea3z__gt=0),
    "kosovo": Q(gc__kosovo__gt=0),
    "kurdistan": Q(gc__kurdistan__gt=0),
    "kuwait": Q(gc__kuwait__gt=0),
    "kyrgyzstan": Q(gc__kyrgyzstan__gt=0),
    "laos": Q(gc__laos__gt=0),
    "latvia": Q(gc__latvia__gt=0),
    "lebanon": Q(gc__lebanon__gt=0),
    "lesotho": Q(gc__lesotho__gt=0),
    "liberia": Q(gc__liberia__gt=0),
    "libya": Q(gc__libya__gt=0),
    "liechtenstein": Q(gc__liechtenstein__gt=0),
    "lithuania": Q(gc__lithuania__gt=0),
    "luxembourg": Q(gc__luxembourg__gt=0),
    "madagascar": Q(gc__madagascar__gt=0),
    "malawi": Q(gc__malawi__gt=0),
    "malaysia": Q(gc__malaysia__gt=0),
    "maldives": Q(gc__maldives__gt=0),
    "mali": Q(gc__mali__gt=0),
    "malta": Q(gc__malta__gt=0),
    "marshallislands": Q(gc__marshallislands__gt=0),
    "mauritania": Q(gc__mauritania__gt=0),
    "mauritius": Q(gc__mauritius__gt=0),
    "mexico": Q(gc__mexico__gt=0),
    "micronesia": Q(gc__micronesia__gt=0),
    "moldovan1republicpridnestrovian": Q(gc__moldovan1republicpridnestrovian__gt=0),
    "moldova2": Q(gc__moldova2__gt=0),
    "monaco": Q(gc__monaco__gt=0),
    "mongolia": Q(gc__mongolia__gt=0),
    "montenegro": Q(gc__montenegro__gt=0),
    "morocco": Q(gc__morocco__gt=0),
    "mozambique": Q(gc__mozambique__gt=0),
    "myanmar": Q(gc__myanmar__gt=0),
    "namibia": Q(gc__namibia__gt=0),
    "nauru": Q(gc__nauru__gt=0),
    "nepal": Q(gc__nepal__gt=0),
    "netherlands": Q(gc__netherlands__gt=0),
    "newzealand": Q(gc__newzealand__gt=0),
    "nicaragua": Q(gc__nicaragua__gt=0),
    "niger": Q(gc__niger__gt=0),
    "nigeria": Q(gc__nigeria__gt=0),
    "northcyprus": Q(gc__northcyprus__gt=0),
    "northmacedonia": Q(gc__northmacedonia__gt=0),
    "norway": Q(gc__norway__gt=0),
    "oman": Q(gc__oman__gt=0),
    "pakistan": Q(gc__pakistan__gt=0),
    "palau": Q(gc__palau__gt=0),
    "palestine": Q(gc__palestine__gt=0),
    "panama": Q(gc__panama__gt=0),
    "papuanewguinea": Q(gc__papuanewguinea__gt=0),
    "paraguay": Q(gc__paraguay__gt=0),
    "peru": Q(gc__peru__gt=0),
    "philippines": Q(gc__philippines__gt=0),
    "poland": Q(gc__poland__gt=0),
    "portugal": Q(gc__portugal__gt=0),
    "puntland": Q(gc__puntland__gt=0),
    "qatar": Q(gc__qatar__gt=0),
    "romania": Q(gc__romania__gt=0),
    "russia": Q(gc__russia__gt=0),
    "rwanda": Q(gc__rwanda__gt=0),
    "sahrawiarabdemocraticrepublic": Q(gc__sahrawiarabdemocraticrepublic__gt=0),
    "saintkittsandnevis": Q(gc__saintkittsandnevis__gt=0),
    "saintlucia": Q(gc__saintlucia__gt=0),
    "saintvincentandthegrenadines": Q(gc__saintvincentandthegrenadines__gt=0),
    "samoa": Q(gc__samoa__gt=0),
    "sanmarino": Q(gc__sanmarino__gt=0),
    "saotomeandprincipe": Q(gc__saotomeandprincipe__gt=0),
    "saudiarabia": Q(gc__saudiarabia__gt=0),
    "senegal": Q(gc__senegal__gt=0),
    "serbia": Q(gc__serbia__gt=0),
    "seychelles": Q(gc__seychelles__gt=0),
    "sierraleone": Q(gc__sierraleone__gt=0),
    "singapore": Q(gc__singapore__gt=0),
    "slovakia": Q(gc__slovakia__gt=0),
    "slovenia": Q(gc__slovenia__gt=0),
    "solomonislands": Q(gc__solomonislands__gt=0),
    "somalia": Q(gc__somalia__gt=0),
    "somaliland": Q(gc__somaliland__gt=0),
    "southafrica": Q(gc__southafrica__gt=0),
    "southkorea": Q(gc__southkorea__gt=0),
    "southossetia": Q(gc__southossetia__gt=0),
    "southsudan": Q(gc__southsudan__gt=0),
    "spain": Q(gc__spain__gt=0),
    "srilanka": Q(gc__srilanka__gt=0),
    "sudan": Q(gc__sudan__gt=0),
    "suriname": Q(gc__suriname__gt=0),
    "sweden": Q(gc__sweden__gt=0),
    "switzerland": Q(gc__switzerland__gt=0),
    "syria": Q(gc__syria__gt=0),
    "tajikistan": Q(gc__tajikistan__gt=0),
    "tanzania": Q(gc__tanzania__gt=0),
    "thailand": Q(gc__thailand__gt=0),
    "tibet": Q(gc__tibet__gt=0),
    "togo": Q(gc__togo__gt=0),
    "tonga": Q(gc__tonga__gt=0),
    "trinidadandtobago": Q(gc__trinidadandtobago__gt=0),
    "tunisia": Q(gc__tunisia__gt=0),
    "turkey": Q(gc__turkey__gt=0),
    "turkmenistan": Q(gc__turkmenistan__gt=0),
    "tuvalu": Q(gc__tuvalu__gt=0),
    "uganda": Q(gc__uganda__gt=0),
    "ukraine": Q(gc__ukraine__gt=0),
    "unitedarabemirates": Q(gc__unitedarabemirates__gt=0),
    "unitedkingdom": Q(gc__unitedkingdom__gt=0),
    "unitedstates": Q(gc__unitedstates__gt=0),
    "uruguay": Q(gc__uruguay__gt=0),
    "uzbekistan": Q(gc__uzbekistan__gt=0),
    "vanuatu": Q(gc__vanuatu__gt=0),
    "vaticancity": Q(gc__vaticancity__gt=0),
    "venezuela": Q(gc__venezuela__gt=0),
    "vietnam": (Q(gc__vietnam2__gt=0) | Q(gc__vietnam1__gt=0)),
    "yemen": Q(gc__yemen__gt=0),
    "zambia": Q(gc__zambia__gt=0),
    "zimbabwe": Q(gc__zimbabwe__gt=0),
    "africa": Q(gr__africa__gt=0),
    "arab_world": Q(gr__arab_world__gt=0),
    "asia_pacific": Q(gr__asia_pacific__gt=0),
    "caribbean": Q(gr__caribbean__gt=0),
    "central_africa": Q(gr__central_africa__gt=0),
    "central_america": Q(gr__central_america__gt=0),
    "central_asia": Q(gr__central_asia__gt=0),
    "east_africa": Q(gr__east_africa__gt=0),
    "east_africa_community": Q(gr__east_africa_community__gt=0),
    "east_asia": Q(gr__east_asia__gt=0),
    "east_asia_and_pacific": Q(gr__east_asia_and_pacific__gt=0),
    "eastern_africa": Q(gr__eastern_africa__gt=0),
    "eastern_asia": Q(gr__eastern_asia__gt=0),
    "europe_and_central_asia": Q(gr__europe_and_central_asia__gt=0),
    "horn_of_africa": Q(gr__horn_of_africa__gt=0),
    "latin_america": Q(gr__latin_america__gt=0),
    "latin_america_and_caribbean": Q(gr__latin_america_and_caribbean__gt=0),
    "middle_africa": Q(gr__middle_africa__gt=0),
    "middle_east": Q(gr__middle_east__gt=0),
    "middle_east_and_north_africa": Q(gr__middle_east_and_north_africa__gt=0),
    "north_africa": Q(gr__north_africa__gt=0),
    "northern_africa": Q(gr__northern_africa__gt=0),
    "pacific": Q(gr__pacific__gt=0),
    "polynesia": Q(gr__polynesia__gt=0),
    "small_island_development_states": Q(gr__small_island_development_states__gt=0),
    "southern_african_development_community": Q(gr__southern_african_development_community__gt=0),
    "south_america": Q(gr__south_america__gt=0),
    "south_asia": Q(gr__south_asia__gt=0),
    "south_asia_region": Q(gr__south_asia_region__gt=0),
    "southeast_asia": Q(gr__southeast_asia__gt=0),
    "southeastern_asia": Q(gr__southeastern_asia__gt=0),
    "southern_africa": Q(gr__southern_africa__gt=0),
    "southern_asia": Q(gr__southern_asia__gt=0),
    "sub_saharan_africa": Q(gr__sub_saharan_africa__gt=0),
    "west_africa": Q(gr__west_africa__gt=0),
    "western_africa": Q(gr__western_africa__gt=0),
    "western_asia": Q(gr__western_asia__gt=0)
}

search_filter_GD = {
   "conflict_affected_areas": Q(gd__conflict_affected_areas__gt=0),
   "conflict_affected_regions": Q(gd__conflict_affected_regions__gt=0),
   "developing_context": Q(gd__developing_context__gt=0),
   "developing_countries": Q(gd__developing_countries__gt=0),
   "developing_country": Q(gd__developing_country__gt=0),
   "developing_economy": Q(gd__developing_economy__gt=0),
   "developing_market_countries": Q(gd__developing_market_countries__gt=0),
   "developing_markets": Q(gd__developing_markets__gt=0),
   "developing_nation": Q(gd__developing_nation__gt=0),
   "developing_region": Q(gd__developing_region__gt=0),
   "developing_state": Q(gd__developing_state__gt=0),
   "developing_world": Q(gd__developing_world__gt=0),
   "emergent_nation": Q(gd__emergent_nation__gt=0),
   "emerging_economies": Q(gd__emerging_economies__gt=0),
   "emerging_market_countries": Q(gd__emerging_market_countries__gt=0),
   "emerging_nation": Q(gd__emerging_nation__gt=0),
   "emerging_world": Q(gd__emerging_world__gt=0),
   "fragile_and_conflict_affected_areas": Q(gd__fragile_and_conflict_affected_areas__gt=0),
   "fragile_and_conflict_affected_regions": Q(gd__fragile_and_conflict_affected_regions__gt=0),
   "fragile_areas": Q(gd__fragile_areas__gt=0),
   "fragile_contexts": Q(gd__fragile_contexts__gt=0),
   "fragile_regions": Q(gd__fragile_regions__gt=0),
   "global_south": Q(gd__global_south__gt=0),
   "growing_economies": Q(gd__growing_economies__gt=0),
   "less_developed_countries": Q(gd__less_developed_countries__gt=0),
   "lmic": Q(gd__lmic__gt=0),
   "low_income_countries1": Q(gd__low_income_countries1__gt=0),
   "low_income_environment1": Q(gd__low_income_environment1__gt=0),
   "low_resource_countries1": Q(gd__low_resource_countries1__gt=0),
   "low_resource_environment1": Q(gd__low_resource_environment1__gt=0),
   "low_income_countries2": Q(gd__low_income_countries2__gt=0),
   "low_income_environment2": Q(gd__low_income_environment2__gt=0),
   "low_resource_countries2": Q(gd__low_resource_countries2__gt=0),
   "low_resource_environment2": Q(gd__low_resource_environment2__gt=0),
   "middle_income_country": Q(gd__middle_income_country__gt=0),
   "middle_income_environment": Q(gd__middle_income_environment__gt=0),
   "third_world": Q(gd__third_world__gt=0),
   "under_developed_countries": Q(gd__under_developed_countries__gt=0),
   "under_developed_nation": Q(gd__under_developed_nation__gt=0)
}

search_filter_P1_P2 = {
   "classroom_assistants": Q(p1__classroom_assistants__gt=0),
   "classroom_instruction": Q(p1__classroom_instruction__gt=0),
   "district_education_officer": Q(p1__district_education_officer__gt=0),
   "early_childhood_development": Q(p1__early_childhood_development__gt=0),
   "early_childhood_education": Q(p1__early_childhood_education__gt=0),
   "educators": Q(p1__educators__gt=0),
   "elementary_education": Q(p1__elementary_education__gt=0),
   "elementary_school": Q(p1__elementary_school__gt=0),
   "faith_school": Q(p1__faith_school__gt=0),
   "headteacher": Q(p1__headteacher__gt=0),
   "high_school": Q(p1__high_school__gt=0),
   "junior_middle_school": Q(p1__junior_middle_school__gt=0),
   "junior_school": Q(p1__junior_school__gt=0),
   "k_12": Q(p1__k_12__gt=0),
   "kindergarten": Q(p1__kindergarten__gt=0),
   "school_director": Q(p1__school_director__gt=0),
   "middle_school1": Q(p1__middle_school1__gt=0),
   "middle_school2": Q(p1__middle_school2__gt=0),
   "ministry_of_education": Q(p1__ministry_of_education__gt=0),
   "nursery": Q(p1__nursery__gt=0),
   "post_primary1": Q(p1__post_primary1__gt=0),
   "post_primary2": Q(p1__post_primary2__gt=0),
   "pre_primary1": Q(p1__pre_primary1__gt=0),
   "pre_primary2": Q(p1__pre_primary2__gt=0),
   "pre_school": Q(p1__pre_school__gt=0),
   "pre_service_teachers": Q(p1__pre_service_teachers__gt=0),
   "primary_education": Q(p1__primary_education__gt=0),
   "primary_school": Q(p1__primary_school__gt=0),
   "principal": Q(p1__principal__gt=0),
   "private_school": Q(p1__private_school__gt=0),
   "refugee_educator": Q(p1__refugee_educator__gt=0),
   "school": Q(p1__school__gt=0),
   "school_administrator": Q(p1__school_administrator__gt=0),
   "school_authority": Q(p1__school_authority__gt=0),
   "school_governing_body": Q(p1__school_governing_body__gt=0),
   "school_head": Q(p1__school_head__gt=0),
   "school_leadership_team": Q(p1__school_leadership_team__gt=0),
   "school_management_team": Q(p1__school_management_team__gt=0),
   "school_offical": Q(p1__school_offical__gt=0),
   "school_principal": Q(p1__school_principal__gt=0),
   "school_supervisor": Q(p1__school_supervisor__gt=0),
   "school_teacher": Q(p1__school_teacher__gt=0),
   "secondary_education": Q(p1__secondary_education__gt=0),
   "secondary_school": Q(p1__secondary_school__gt=0),
   "senior_leadership_team": Q(p1__senior_leadership_team__gt=0),
   "state_school": Q(p1__state_school__gt=0),
   "teacher_candidates": Q(p1__teacher_candidates__gt=0),
   "teacher_certificate": Q(p1__teacher_certificate__gt=0),
   "teacher_cop": Q(p1__teacher_cop__gt=0),
   "teacher_education": Q(p1__teacher_education__gt=0),
   "teacher_professional_development": Q(p1__teacher_professional_development__gt=0),
   "teacher_training": Q(p1__teacher_training__gt=0),
   "teacher_training_centre": Q(p1__teacher_training_centre__gt=0),
   "teacher_training_college": Q(p1__teacher_training_college__gt=0),
   "teacher_training_institute": Q(p1__teacher_training_institute__gt=0),
   "teachers": Q(p1__teachers__gt=0),
   "teaching_assistant": Q(p1__teaching_assistant__gt=0),
   "teaching_assistants": Q(p1__teaching_assistants__gt=0),
   "teaching_certificate": Q(p1__teaching_certificate__gt=0),
   "accessible_learning": Q(p2__accessible_learning__gt=0),
   "alien": Q(p2__alien__gt=0),
   "alienation": Q(p2__alienation__gt=0),
   "asylum": Q(p2__asylum__gt=0),
   "asylum_seeker": Q(p2__asylum_seeker__gt=0),
   "at_risk_population": Q(p2__at_risk_population__gt=0),
   "bachelors_degree1": Q(p2__bachelors_degree1__gt=0),
   "bachelors_degree2": Q(p2__bachelors_degree2__gt=0),
   "career_entry_support1": Q(p2__career_entry_support1__gt=0),
   "career_entry_support2": Q(p2__career_entry_support2__gt=0),
   "career_path_training": Q(p2__career_path_training__gt=0),
   "church": Q(p2__church__gt=0),
   "community_education": Q(p2__community_education__gt=0),
   "competency_based_training": Q(p2__competency_based_training__gt=0),
   "continuing_education": Q(p2__continuing_education__gt=0),
   "continuing_training": Q(p2__continuing_training__gt=0),
   "continuous_professional_development": Q(p2__continuous_professional_development__gt=0),
   "degree": Q(p2__degree__gt=0),
   "diploma": Q(p2__diploma__gt=0),
   "disabilities": Q(p2__disabilities__gt=0),
   "disability": Q(p2__disability__gt=0),
   "district_level": Q(p2__district_level__gt=0),
   "displaced_person": Q(p2__displaced_person__gt=0),
   "displaced_populations": Q(p2__displaced_populations__gt=0),
   "education": Q(p2__education__gt=0),
   "education_in_emergencies": Q(p2__education_in_emergencies__gt=0),
   "favela": Q(p2__favela__gt=0),
   "fragility_in_education": Q(p2__fragility_in_education__gt=0),
   "gang_members": Q(p2__gang_members__gt=0),
   "geographically_dispersed": Q(p2__geographically_dispersed__gt=0),
   "in_service_training": Q(p2__in_service_training__gt=0),
   "informal_education": Q(p2__informal_education__gt=0),
   "informal_learning": Q(p2__informal_learning__gt=0),
   "informal_training": Q(p2__informal_training__gt=0),
   "language_learning": Q(p2__language_learning__gt=0),
   "learning_community": Q(p2__learning_community__gt=0),
   "masters_degree": Q(p2__masters_degree__gt=0),
   "masters": Q(p2__masters__gt=0),
   "math": Q(p2__math__gt=0),
   "mathematics": Q(p2__mathematics__gt=0),
   "migrant": Q(p2__migrant__gt=0),
   "minority_ethnic_group": Q(p2__minority_ethnic_group__gt=0),
   "mosque": Q(p2__mosque__gt=0),
   "moving_populations": Q(p2__moving_populations__gt=0),
   "natural_science": Q(p2__natural_science__gt=0),
   "non_formal_education": Q(p2__non_formal_education__gt=0),
   "non_formal_learning": Q(p2__non_formal_learning__gt=0),
   "postsecondary_education": Q(p2__postsecondary_education__gt=0),
   "pre_service_training": Q(p2__pre_service_training__gt=0),
   "professional_continuing_education": Q(p2__professional_continuing_education__gt=0),
   "professional_education": Q(p2__professional_education__gt=0),
   "professional_learning_community": Q(p2__professional_learning_community__gt=0),
   "professional_qualification": Q(p2__professional_qualification__gt=0),
   "professional_re_education": Q(p2__professional_re_education__gt=0),
   "professional_studies": Q(p2__professional_studies__gt=0),
   "professional_training": Q(p2__professional_training__gt=0),
   "qualification": Q(p2__qualification__gt=0),
   "refugee_education": Q(p2__refugee_education__gt=0),
   "refugee_learning": Q(p2__refugee_learning__gt=0),
   "science": Q(p2__science__gt=0),
   "science_and_technology": Q(p2__science_and_technology__gt=0),
   "science_technology_engineering_and_applied_mathematics": Q(p2__science_technology_engineering_and_applied_mathematics__gt=0),
   "science_technology_engineering_and_mathematics": Q(p2__science_technology_engineering_and_mathematics__gt=0),
   "slum": Q(p2__slum__gt=0),
   "special_educational_needs": Q(p2__special_educational_needs__gt=0),
   "sen_learner": Q(p2__sen_learner__gt=0),
   "sen_student": Q(p2__sen_student__gt=0),
   "special_educational_needs_and_disabilities": Q(p2__special_educational_needs_and_disabilities__gt=0),
   "special_needs_students": Q(p2__special_needs_students__gt=0),
   "street_children": Q(p2__street_children__gt=0),
   "students": Q(p2__students__gt=0),
   "students_with_disabilities": Q(p2__students_with_disabilities__gt=0),
   "technical_training": Q(p2__technical_training__gt=0),
   "technical_and_vocational_education_and_training": Q(p2__technical_and_vocational_education_and_training__gt=0),
   "vocational_training": Q(p2__vocational_training__gt=0),
   "young_people": Q(p2__young_people__gt=0),
   "youth": Q(p2__youth__gt=0)
}



search_filter_R = {
   "action_research": Q(r__action_research__gt=0),
   "adaptive": Q(r__adaptive__gt=0),
   "agile": Q(r__agile__gt=0),
   "anarchy": Q(r__anarchy__gt=0),
   "case_study": Q(r__case_study__gt=0),
   "citizen_science": Q(r__citizen_science__gt=0),
   "correlation": Q(r__correlation__gt=0),
   "critical_realism": Q(r__critical_realism__gt=0),
   "critical_theory": Q(r__critical_theory__gt=0),
   "design_based_implementation_research": Q(r__design_based_implementation_research__gt=0),
   "design_based_research": Q(r__design_based_research__gt=0),
   "deductive": Q(r__deductive__gt=0),
   "difference_in_differences": Q(r__difference_in_differences__gt=0),
   "engineering_based_research": Q(r__engineering_based_research__gt=0),
   "evaluation": Q(r__evaluation__gt=0),
   "experimental_design": Q(r__experimental_design__gt=0),
   "focus_groups": Q(r__focus_groups__gt=0),
   "formative_research": Q(r__formative_research__gt=0),
   "grounded_theory": Q(r__grounded_theory__gt=0),
   "group_discussions": Q(r__group_discussions__gt=0),
   "hermeneutics": Q(r__hermeneutics__gt=0),
   "historical": Q(r__historical__gt=0),
   "impact": Q(r__impact__gt=0),
   "inductive": Q(r__inductive__gt=0),
   "interview": Q(r__interview__gt=0),
   "iterative": Q(r__iterative__gt=0),
   "lean": Q(r__lean__gt=0),
   "learning_analytics": Q(r__learning_analytics__gt=0),
   "literature_analysis": Q(r__literature_analysis__gt=0),
   "literature_review": Q(r__literature_review__gt=0),
   "long_interview": Q(r__long_interview__gt=0),
   "meta_analysis": Q(r__meta_analysis__gt=0),
   "mixed_method": Q(r__mixed_method__gt=0),
   "modelling": Q(r__modelling__gt=0),
   "observation": Q(r__observation__gt=0),
   "participatory_video": Q(r__participatory_video__gt=0),
   "positivist": Q(r__positivist__gt=0),
   "quasi_experimental_design": Q(r__quasi_experimental_design__gt=0),
   "qualitative": Q(r__qualitative__gt=0),
   "quantitative": Q(r__quantitative__gt=0),
   "questionnaire": Q(r__questionnaire__gt=0),
   "randomised_control_trial": Q(r__randomised_control_trial__gt=0),
   "regression": Q(r__regression__gt=0),
   "regression_discontinuity_design": Q(r__regression_discontinuity_design__gt=0),
   "research_design": Q(r__research_design__gt=0),
   "research_method": Q(r__research_method__gt=0),
   "rich_text_analysis": Q(r__rich_text_analysis__gt=0),
   "semi_structured_interview": Q(r__semi_structured_interview__gt=0),
   "structured_interview": Q(r__structured_interview__gt=0),
   "survey": Q(r__survey__gt=0),
   "synthesis": Q(r__synthesis__gt=0),
   "systematic_review": Q(r__systematic_review__gt=0),
   "tracer_study": Q(r__tracer_study__gt=0),
   "trial": Q(r__trial__gt=0),
   "unstructured_interview": Q(r__unstructured_interview__gt=0),
   "usability": Q(r__usability__gt=0),
   "video": Q(r__video__gt=0),
   "program_evaluation": Q(r__program_evaluation__gt=0),
   "programme_evaluation": Q(r__programme_evaluation__gt=0)
}

search_filter_TE_TT = {
    "electronic_whiteboard": Q(te__electronic_whiteboard__gt=0),
    "interactive_whiteboard": Q(te__interactive_whiteboard__gt=0),
    "smart_board": Q(te__smart_board__gt=0),
    "smartboard": Q(te__smartboard__gt=0),
    "electronic_textbook": Q(te__electronic_textbook__gt=0),
    "etutor": Q(te__etutor__gt=0),
    "free_digital_resources": Q(te__free_digital_resources__gt=0),
    "intelligent_agent": Q(te__intelligent_agent__gt=0),
    "intelligent_tutoring_system": Q(te__intelligent_tutoring_system__gt=0),
    "learning_platform": Q(te__learning_platform__gt=0),
    "massive_open_online_course": Q(te__massive_open_online_course__gt=0),
    "moodle": Q(te__moodle__gt=0),
    "open_educational_resources": Q(te__open_educational_resources__gt=0),
    "online_textbook": Q(te__online_textbook__gt=0),
    "online_tutor": Q(te__online_tutor__gt=0),
    "reusable_learning_object": Q(te__reusable_learning_object__gt=0),
    "school_website": Q(te__school_website__gt=0),
    "edtech": Q(te__edtech__gt=0),
    "educational_innovation": Q(te__educational_innovation__gt=0),
    "educational_technologies": Q(te__educational_technologies__gt=0),
    "emerging_education_technologies": Q(te__emerging_education_technologies__gt=0),
    "emerging_education_technology": Q(te__emerging_education_technology__gt=0),
    "ict_in_classrooms": Q(te__ict_in_classrooms__gt=0),
    "ict_in_the_classroom": Q(te__ict_in_the_classroom__gt=0),
    "technology_at_school": Q(te__technology_at_school__gt=0),
    "technology_in_education": Q(te__technology_in_education__gt=0),
    "technology_in_school": Q(te__technology_in_school__gt=0),
    "technology_use_in_education": Q(te__technology_use_in_education__gt=0),
    "adaptive_learning": Q(te__adaptive_learning__gt=0),
    "asynchronous_learning": Q(te__asynchronous_learning__gt=0),
    "blended_learning": Q(te__blended_learning__gt=0),
    "computer_assisted_instruction1": Q(te__computer_assisted_instruction1__gt=0),
    "computer_assisted_instruction2": Q(te__computer_assisted_instruction2__gt=0),
    "computer_assisted_learning": Q(te__computer_assisted_learning__gt=0),
    "computer_based_assessment": Q(te__computer_based_assessment__gt=0),
    "computer_based_instruction": Q(te__computer_based_instruction__gt=0),
    "computer_managed_instruction": Q(te__computer_managed_instruction__gt=0),
    "computer_mediated_learning": Q(te__computer_mediated_learning__gt=0),
    "computer_supported_collaborative_learning": Q(te__computer_supported_collaborative_learning__gt=0),
    "computer_supported_education": Q(te__computer_supported_education__gt=0),
    "computer_assisted_instructional_programme": Q(te__computer_assisted_instructional_programme__gt=0),
    "computerised_learning": Q(te__computerised_learning__gt=0),
    "connected_learning": Q(te__connected_learning__gt=0),
    "differentiated_learning": Q(te__differentiated_learning__gt=0),
    "digital_learning": Q(te__digital_learning__gt=0),
    "distance_education": Q(te__distance_education__gt=0),
    "distance_learning": Q(te__distance_learning__gt=0),
    "distance_learning_program": Q(te__distance_learning_program__gt=0),
    "distributed_learning": Q(te__distributed_learning__gt=0),
    "e_learning": Q(te__e_learning__gt=0),
    "electronic_classroom": Q(te__electronic_classroom__gt=0),
    "flipped_classroom": Q(te__flipped_classroom__gt=0),
    "flipped_learning": Q(te__flipped_learning__gt=0),
    "free_digital_learning": Q(te__free_digital_learning__gt=0),
    "gamification": Q(te__gamification__gt=0),
    "hybrid_learning": Q(te__hybrid_learning__gt=0),
    "individualised_learning": Q(te__individualised_learning__gt=0),
    "instructional_innovation": Q(te__instructional_innovation__gt=0),
    "instructional_technology": Q(te__instructional_technology__gt=0),
    "integrated_learning_systems": Q(te__integrated_learning_systems__gt=0),
    "interactive_learning_environment": Q(te__interactive_learning_environment__gt=0),
    "learning": Q(te__learning__gt=0),
    "media_literacy": Q(te__media_literacy__gt=0),
    "microlearning": Q(te__microlearning__gt=0),
    "mobile_education": Q(te__mobile_education__gt=0),
    "mobile_learning": Q(te__mobile_learning__gt=0),
    "multimedia_instruction": Q(te__multimedia_instruction__gt=0),
    "open_and_distance_elearning": Q(te__open_and_distance_elearning__gt=0),
    "open_and_distance_learning": Q(te__open_and_distance_learning__gt=0),
    "online_course": Q(te__online_course__gt=0),
    "online_lab": Q(te__online_lab__gt=0),
    "online_laboratory": Q(te__online_laboratory__gt=0),
    "online_learning": Q(te__online_learning__gt=0),
    "open_education": Q(te__open_education__gt=0),
    "open_learning": Q(te__open_learning__gt=0),
    "personalised_learning": Q(te__personalised_learning__gt=0),
    "personalised_teaching": Q(te__personalised_teaching__gt=0),
    "plasma_based_instruction": Q(te__plasma_based_instruction__gt=0),
    "self_directed_learning": Q(te__self_directed_learning__gt=0),
    "self_paced_learning": Q(te__self_paced_learning__gt=0),
    "synchronous_online_learning": Q(te__synchronous_online_learning__gt=0),
    "technological_pedagogical_content": Q(te__technological_pedagogical_content__gt=0),
    "technology_assisted_learning1": Q(te__technology_assisted_learning1__gt=0),
    "technology_engagement_teaching_strategy": Q(te__technology_engagement_teaching_strategy__gt=0),
    "technology_enhanced_learning": Q(te__technology_enhanced_learning__gt=0),
    "technology_integration": Q(te__technology_integration__gt=0),
    "technology_assisted_learning2": Q(te__technology_assisted_learning2__gt=0),
    "tele_education": Q(te__tele_education__gt=0),
    "virtual_classroom": Q(te__virtual_classroom__gt=0),
    "virtual_learning": Q(te__virtual_learning__gt=0),
    "virtual_learning_environment": Q(te__virtual_learning_environment__gt=0),
    "virtual_school": Q(te__virtual_school__gt=0),
    "web_based_instruction": Q(te__web_based_instruction__gt=0),
    "webinar": Q(te__webinar__gt=0),
    "course_management_system": Q(te__course_management_system__gt=0),
    "education_management_information_system": Q(te__education_management_information_system__gt=0),
    "examination_systems": Q(te__examination_systems__gt=0),
    "learning_management_systems": Q(te__learning_management_systems__gt=0),
    "teacher_development_software": Q(te__teacher_development_software__gt=0),
    "textbook_analytics": Q(te__textbook_analytics__gt=0),
    "3d_printer": Q(tt__field_3d_printer__gt=0),
    "3d_printing": Q(tt__field_3d_printing__gt=0),
    "access_to_computers": Q(tt__access_to_computers__gt=0),
    "accessible_technologies": Q(tt__accessible_technologies__gt=0),
    "alternative_communication": Q(tt__alternative_communication__gt=0),
    "android": Q(tt__android__gt=0),
    "app": Q(tt__app__gt=0),
    "apple": Q(tt__apple__gt=0),
    "assistive_technology": Q(tt__assistive_technology__gt=0),
    "audio_recording": Q(tt__audio_recording__gt=0),
    "augmentative_communication": Q(tt__augmentative_communication__gt=0),
    "bada": Q(tt__bada__gt=0),
    "bandwidth": Q(tt__bandwidth__gt=0),
    "barriers_to_technology": Q(tt__barriers_to_technology__gt=0),
    "big_data": Q(tt__big_data__gt=0),
    "blackberry": Q(tt__blackberry__gt=0),
    "blog": Q(tt__blog__gt=0),
    "camera": Q(tt__camera__gt=0),
    "cellphone": Q(tt__cellphone__gt=0),
    "chatbot": Q(tt__chatbot__gt=0),
    "clicker_technology": Q(tt__clicker_technology__gt=0),
    "clickers": Q(tt__clickers__gt=0),
    "cloud": Q(tt__cloud__gt=0),
    "cmc": Q(tt__cmc__gt=0),
    "computational_thinking_literacy": Q(tt__computational_thinking_literacy__gt=0),
    "computer": Q(tt__computer__gt=0),
    "computer_illiteracy": Q(tt__computer_illiteracy__gt=0),
    "computer_literacy": Q(tt__computer_literacy__gt=0),
    "computer_mediated_communication": Q(tt__computer_mediated_communication__gt=0),
    "computerised": Q(tt__computerised__gt=0),
    "computers_on_wheels": Q(tt__computers_on_wheels__gt=0),
    "connectivity": Q(tt__connectivity__gt=0),
    "ct_literacy": Q(tt__ct_literacy__gt=0),
    "data": Q(tt__data__gt=0),
    "digital_communication": Q(tt__digital_communication__gt=0),
    "digital_content": Q(tt__digital_content__gt=0),
    "digital_divide": Q(tt__digital_divide__gt=0),
    "digital_exclusion": Q(tt__digital_exclusion__gt=0),
    "digital_immigrants": Q(tt__digital_immigrants__gt=0),
    "digital_inclusion": Q(tt__digital_inclusion__gt=0),
    "digital_literacy": Q(tt__digital_literacy__gt=0),
    "digital_native": Q(tt__digital_native__gt=0),
    "digital_resources": Q(tt__digital_resources__gt=0),
    "digital_scrapbook": Q(tt__digital_scrapbook__gt=0),
    "digital_skills": Q(tt__digital_skills__gt=0),
    "digital_storytelling": Q(tt__digital_storytelling__gt=0),
    "digital_technology": Q(tt__digital_technology__gt=0),
    "digital_transformation": Q(tt__digital_transformation__gt=0),
    "digitalised": Q(tt__digitalised__gt=0),
    "digitised": Q(tt__digitised__gt=0),
    "discord": Q(tt__discord__gt=0),
    "disruptive_technology": Q(tt__disruptive_technology__gt=0),
    "douban": Q(tt__douban__gt=0),
    "douyin": Q(tt__douyin__gt=0),
    "dvd_player": Q(tt__dvd_player__gt=0),
    "e_book": Q(tt__e_book__gt=0),
    "e_reader": Q(tt__e_reader__gt=0),
    "earphones": Q(tt__earphones__gt=0),
    "ebook": Q(tt__ebook__gt=0),
    "ereader": Q(tt__ereader__gt=0),
    "facebook": Q(tt__facebook__gt=0),
    "gadget": Q(tt__gadget__gt=0),
    "game_console": Q(tt__game_console__gt=0),
    "garnet": Q(tt__garnet__gt=0),
    "geographical_information_systems": Q(tt__geographical_information_systems__gt=0),
    "hardware": Q(tt__hardware__gt=0),
    "headphones": Q(tt__headphones__gt=0),
    "holograms": Q(tt__holograms__gt=0),
    "i_pad": Q(tt__i_pad__gt=0),
    "ict": Q(tt__ict__gt=0),
    "inclusive_technologies": Q(tt__inclusive_technologies__gt=0),
    "influence_of_technology": Q(tt__influence_of_technology__gt=0),
    "information_communications_technology_literacy": Q(tt__information_communications_technology_literacy__gt=0),
    "information_literacy": Q(tt__information_literacy__gt=0),
    "instagram": Q(tt__instagram__gt=0),
    "instructional_systems": Q(tt__instructional_systems__gt=0),
    "integration_of_technology": Q(tt__integration_of_technology__gt=0),
    "intel": Q(tt__intel__gt=0),
    "interactive": Q(tt__interactive__gt=0),
    "internet": Q(tt__internet__gt=0),
    "internet_access": Q(tt__internet_access__gt=0),
    "internet_domain": Q(tt__internet_domain__gt=0),
    "internet_of_things": Q(tt__internet_of_things__gt=0),
    "ios": Q(tt__ios__gt=0),
    "ipad": Q(tt__ipad__gt=0),
    "iphone": Q(tt__iphone__gt=0),
    "information_technology": Q(tt__information_technology__gt=0),
    "keyboard": Q(tt__keyboard__gt=0),
    "kindle": Q(tt__kindle__gt=0),
    "laptop": Q(tt__laptop__gt=0),
    "linkedin": Q(tt__linkedin__gt=0),
    "maemo": Q(tt__maemo__gt=0),
    "meego": Q(tt__meego__gt=0),
    "metadata": Q(tt__metadata__gt=0),
    "microsoft": Q(tt__microsoft__gt=0),
    "mobile_phone": Q(tt__mobile_phone__gt=0),
    "new_media": Q(tt__new_media__gt=0),
    "new_technologies": Q(tt__new_technologies__gt=0),
    "offline": Q(tt__offline__gt=0),
    "online": Q(tt__online__gt=0),
    "online_discussion": Q(tt__online_discussion__gt=0),
    "open_source": Q(tt__open_source__gt=0),
    "open_source_software": Q(tt__open_source_software__gt=0),
    "open_wedos": Q(tt__open_wedos__gt=0),
    "operating_system": Q(tt__operating_system__gt=0),
    "palm_os": Q(tt__palm_os__gt=0),
    "pinterest": Q(tt__pinterest__gt=0),
    "platform": Q(tt__platform__gt=0),
    "podcast": Q(tt__podcast__gt=0),
    "poll_everywhere": Q(tt__poll_everywhere__gt=0),
    "printer": Q(tt__printer__gt=0),
    "qq": Q(tt__qq__gt=0),
    "qzone": Q(tt__qzone__gt=0),
    "rachel": Q(tt__rachel__gt=0),
    "rachel_server": Q(tt__rachel_server__gt=0),
    "radio": Q(tt__radio__gt=0),
    "raspberry_pi": Q(tt__raspberry_pi__gt=0),
    "reddit": Q(tt__reddit__gt=0),
    "sd_card": Q(tt__sd_card__gt=0),
    "simulation": Q(tt__simulation__gt=0),
    "sina_weibo": Q(tt__sina_weibo__gt=0),
    "single_board_computer": Q(tt__single_board_computer__gt=0),
    "snapchat": Q(tt__snapchat__gt=0),
    "social_media": Q(tt__social_media__gt=0),
    "social_network": Q(tt__social_network__gt=0),
    "social_networking_sites": Q(tt__social_networking_sites__gt=0),
    "software": Q(tt__software__gt=0),
    "supportive_technology": Q(tt__supportive_technology__gt=0),
    "symbian": Q(tt__symbian__gt=0),
    "tablet": Q(tt__tablet__gt=0),
    "technological_literacy": Q(tt__technological_literacy__gt=0),
    "technology_leapfrogging": Q(tt__technology_leapfrogging__gt=0),
    "technology_enhanced": Q(tt__technology_enhanced__gt=0),
    "telephone": Q(tt__telephone__gt=0),
    "television": Q(tt__television__gt=0),
    "tiktok": Q(tt__tiktok__gt=0),
    "twitter": Q(tt__twitter__gt=0),
    "verdict": Q(tt__verdict__gt=0),
    "viber": Q(tt__viber__gt=0),
    "video_recorder": Q(tt__video_recorder__gt=0),
    "videoconferencing": Q(tt__videoconferencing__gt=0),
    "virtual_peer": Q(tt__virtual_peer__gt=0),
    "virtual_reality": Q(tt__virtual_reality__gt=0),
    "web": Q(tt__web__gt=0),
    "wechat": Q(tt__wechat__gt=0),
    "whatsapp": Q(tt__whatsapp__gt=0),
    "wifi": Q(tt__wifi__gt=0),
    "wikipedia": Q(tt__wikipedia__gt=0),
    "windows": Q(tt__windows__gt=0),
    "youtube": Q(tt__youtube__gt=0)
}

search_filter_O = {
    "alison": Q(o__alison__gt=0),
    "brck": Q(o__brck__gt=0),
    "bridge": Q(o__bridge__gt=0),
    "ck_12": Q(o__ck_12__gt=0),
    "coursera": Q(o__coursera__gt=0),
    "dr_maths": Q(o__dr_maths__gt=0),
    "edx": Q(o__edx__gt=0),
    "egyptian_teachers_first_professional_development_program": Q(o__egyptian_teachers_first_professional_development_program__gt=0),
    "ekstep": Q(o__ekstep__gt=0),
    "emo_haiti": Q(o__emo_haiti__gt=0),
    "eneza": Q(o__eneza__gt=0),
    "enlaces": Q(o__enlaces__gt=0),
    "enuma": Q(o__enuma__gt=0),
    "foundation_for_learning_equality": Q(o__foundation_for_learning_equality__gt=0),
    "futurelearn": Q(o__futurelearn__gt=0),
    "geekie": Q(o__geekie__gt=0),
    "hip2bsquared": Q(o__hip2bsquared__gt=0),
    "inable": Q(o__inable__gt=0),
    "khan_academy1": Q(o__khan_academy1__gt=0),
    "khan_academy2": Q(o__khan_academy2__gt=0),
    "khanya_project": Q(o__khanya_project__gt=0),
    "kolibri": Q(o__kolibri__gt=0),
    "lego_project": Q(o__lego_project__gt=0),
    "mindspark": Q(o__mindspark__gt=0),
    "mobilearn": Q(o__mobilearn__gt=0),
    "mxit": Q(o__mxit__gt=0),
    "nafham": Q(o__nafham__gt=0),
    "ole": Q(o__ole__gt=0),
    "one_billion": Q(o__one_billion__gt=0),
    "one_laptop_per_child": Q(o__one_laptop_per_child__gt=0),
    "pratham_books_storyweaver": Q(o__pratham_books_storyweaver__gt=0),
    "retel": Q(o__retel__gt=0),
    "rumie": Q(o__rumie__gt=0),
    "scratch": Q(o__scratch__gt=0),
    "siyavula": Q(o__siyavula__gt=0),
    "ted": Q(o__ted__gt=0),
    "the_connected_learning_initiative": Q(o__the_connected_learning_initiative__gt=0),
    "the_egyptian_knowledge_bank": Q(o__the_egyptian_knowledge_bank__gt=0),
    "the_global_digital_library": Q(o__the_global_digital_library__gt=0),
    "the_queen_rania_teacher_academy": Q(o__the_queen_rania_teacher_academy__gt=0),
    "ubongo": Q(o__ubongo__gt=0),
    "udacity": Q(o__udacity__gt=0),
    "university_of_the_people": Q(o__university_of_the_people__gt=0),
    "worldreader": Q(o__worldreader__gt=0),
    "xuetangx": Q(o__xuetangx__gt=0),
    "yoza": Q(o__yoza__gt=0)
}

search_filter_F = {
    "21st_century_learning": Q(f__field_21st_century_learning__gt=0),
    "academic_achievement": Q(f__academic_achievement__gt=0),
    "access": Q(f__access__gt=0),
    "access_to_education": Q(f__access_to_education__gt=0),
    "accessibility": Q(f__accessibility__gt=0),
    "accountability": Q(f__accountability__gt=0),
    "achievement": Q(f__achievement__gt=0),
    "achievement_gap": Q(f__achievement_gap__gt=0),
    "aid": Q(f__aid__gt=0),
    "assessment": Q(f__assessment__gt=0),
    "attainment": Q(f__attainment__gt=0),
    "attendance": Q(f__attendance__gt=0),
    "attitude": Q(f__attitude__gt=0),
    "attribution": Q(f__attribution__gt=0),
    "bank": Q(f__bank__gt=0),
    "banking": Q(f__banking__gt=0),
    "behavior": Q(f__behavior__gt=0),
    "behaviour": Q(f__behaviour__gt=0),
    "budgeting": Q(f__budgeting__gt=0),
    "change_management": Q(f__change_management__gt=0),
    "charity": Q(f__charity__gt=0),
    "constraints": Q(f__constraints__gt=0),
    "constructivism": Q(f__constructivism__gt=0),
    "constructivist": Q(f__constructivist__gt=0),
    "consumption_and_capital_investment": Q(f__consumption_and_capital_investment__gt=0),
    "cost": Q(f__cost__gt=0),
    "cost_analysis": Q(f__cost_analysis__gt=0),
    "cost_benefit_analysis": Q(f__cost_benefit_analysis__gt=0),
    "cost_classification": Q(f__cost_classification__gt=0),
    "cost_effectiveness": Q(f__cost_effectiveness__gt=0),
    "cost_of_living": Q(f__cost_of_living__gt=0),
    "curricula": Q(f__curricula__gt=0),
    "curriculum": Q(f__curriculum__gt=0),
    "demand": Q(f__demand__gt=0),
    "decision_making": Q(f__decision_making__gt=0),
    "dialogic_pedagogy": Q(f__dialogic_pedagogy__gt=0),
    "dialogue": Q(f__dialogue__gt=0),
    "digital_economy": Q(f__digital_economy__gt=0),
    "digital_goods_and_services": Q(f__digital_goods_and_services__gt=0),
    "digital_trade": Q(f__digital_trade__gt=0),
    "discriminatory_taxes": Q(f__discriminatory_taxes__gt=0),
    "diversity": Q(f__diversity__gt=0),
    "divided_societies": Q(f__divided_societies__gt=0),
    "domestic_education_spending": Q(f__domestic_education_spending__gt=0),
    "donor": Q(f__donor__gt=0),
    "donor_sponsored": Q(f__donor_sponsored__gt=0),
    "early_literacy": Q(f__early_literacy__gt=0),
    "economic_factors": Q(f__economic_factors__gt=0),
    "economics": Q(f__economics__gt=0),
    "education_financing": Q(f__education_financing__gt=0),
    "education_rbf": Q(f__education_rbf__gt=0),
    "education_results_based_financing": Q(f__education_results_based_financing__gt=0),
    "educational_equality": Q(f__educational_equality__gt=0),
    "educational_equity": Q(f__educational_equity__gt=0),
    "educational_opportunities": Q(f__educational_opportunities__gt=0),
    "efficiency": Q(f__efficiency__gt=0),
    "emancipation": Q(f__emancipation__gt=0),
    "empowerment": Q(f__empowerment__gt=0),
    "equity": Q(f__equity__gt=0),
    "exclusion": Q(f__exclusion__gt=0),
    "expenditures": Q(f__expenditures__gt=0),
    "expense": Q(f__expense__gt=0),
    "female": Q(f__female__gt=0),
    "federal_aid": Q(f__federal_aid__gt=0),
    "finance": Q(f__finance__gt=0),
    "financers": Q(f__financers__gt=0),
    "financial_feasibility": Q(f__financial_feasibility__gt=0),
    "financial_policy": Q(f__financial_policy__gt=0),
    "financial_stream": Q(f__financial_stream__gt=0),
    "financial_support": Q(f__financial_support__gt=0),
    "financing": Q(f__financing__gt=0),
    "flexible": Q(f__flexible__gt=0),
    "fund_raising": Q(f__fund_raising__gt=0),
    "funder": Q(f__funder__gt=0),
    "funding": Q(f__funding__gt=0),
    "funding_formula": Q(f__funding_formula__gt=0),
    "funding_proposals": Q(f__funding_proposals__gt=0),
    "fundraising": Q(f__fundraising__gt=0),
    "gender": Q(f__gender__gt=0),
    "gender_equality": Q(f__gender_equality__gt=0),
    "girl": Q(f__girl__gt=0),
    "government": Q(f__government__gt=0),
    "government_funding": Q(f__government_funding__gt=0),
    "government_role": Q(f__government_role__gt=0),
    "high_tariffs": Q(f__high_tariffs__gt=0),
    "improvement": Q(f__improvement__gt=0),
    "incentives": Q(f__incentives__gt=0),
    "incidental_learning": Q(f__incidental_learning__gt=0),
    "inclusion": Q(f__inclusion__gt=0),
    "inclusive_education": Q(f__inclusive_education__gt=0),
    "inclusive_learning": Q(f__inclusive_learning__gt=0),
    "information_sciences": Q(f__information_sciences__gt=0),
    "instructional_design": Q(f__instructional_design__gt=0),
    "instructionalism": Q(f__instructionalism__gt=0),
    "interactionism": Q(f__interactionism__gt=0),
    "interactive_pedagogy": Q(f__interactive_pedagogy__gt=0),
    "interactive_teaching": Q(f__interactive_teaching__gt=0),
    "intercultural": Q(f__intercultural__gt=0),
    "integration": Q(f__integration__gt=0),
    "internet_economy": Q(f__internet_economy__gt=0),
    "investments": Q(f__investments__gt=0),
    "leadership": Q(f__leadership__gt=0),
    "learning_ecologies": Q(f__learning_ecologies__gt=0),
    "life_wide_learning": Q(f__life_wide_learning__gt=0),
    "lifelong_learning": Q(f__lifelong_learning__gt=0),
    "limitations": Q(f__limitations__gt=0),
    "literacy": Q(f__literacy__gt=0),
    "literacy_assessment": Q(f__literacy_assessment__gt=0),
    "management": Q(f__management__gt=0),
    "millennium_development_goals": Q(f__millennium_development_goals__gt=0),
    "ministry": Q(f__ministry__gt=0),
    "monitoring_and_evaluation": Q(f__monitoring_and_evaluation__gt=0),
    "monitoring_evaluation_and_learning": Q(f__monitoring_evaluation_and_learning__gt=0),
    "motivation": Q(f__motivation__gt=0),
    "mulitlingual_education": Q(f__mulitlingual_education__gt=0),
    "neo_colonialism": Q(f__neo_colonialism__gt=0),
    "neo_liberalism": Q(f__neo_liberalism__gt=0),
    "neocolonialism": Q(f__neocolonialism__gt=0),
    "neoliberalism": Q(f__neoliberalism__gt=0),
    "non_mother_tongue_language_acquisition": Q(f__non_mother_tongue_language_acquisition__gt=0),
    "numeracy": Q(f__numeracy__gt=0),
    "numeracy_assessment": Q(f__numeracy_assessment__gt=0),
    "opportunity_cost": Q(f__opportunity_cost__gt=0),
    "outcomes": Q(f__outcomes__gt=0),
    "pay": Q(f__pay__gt=0),
    "payment": Q(f__payment__gt=0),
    "pedagogy": Q(f__pedagogy__gt=0),
    "personalised_teaching": Q(f__personalised_teaching__gt=0),
    "philanthropic_foundations": Q(f__philanthropic_foundations__gt=0),
    "policy": Q(f__policy__gt=0),
    "private_financial_support": Q(f__private_financial_support__gt=0),
    "private_public_partnership": Q(f__private_public_partnership__gt=0),
    "pro_poor": Q(f__pro_poor__gt=0),
    "problem_based_learning": Q(f__problem_based_learning__gt=0),
    "profit": Q(f__profit__gt=0),
    "profitability": Q(f__profitability__gt=0),
    "public_expenditure_on_education": Q(f__public_expenditure_on_education__gt=0),
    "public_relations": Q(f__public_relations__gt=0),
    "reading": Q(f__reading__gt=0),
    "regulation": Q(f__regulation__gt=0),
    "remuneration": Q(f__remuneration__gt=0),
    "resource_allocation": Q(f__resource_allocation__gt=0),
    "returns": Q(f__returns__gt=0),
    "rewards": Q(f__rewards__gt=0),
    "rural": Q(f__rural__gt=0),
    "salary": Q(f__salary__gt=0),
    "scalabilty": Q(f__scalabilty__gt=0),
    "scholarships": Q(f__scholarships__gt=0),
    "school_management": Q(f__school_management__gt=0),
    "sustainable_development_goals": Q(f__sustainable_development_goals__gt=0),
    "service_providers": Q(f__service_providers__gt=0),
    "socio_culturalism": Q(f__socio_culturalism__gt=0),
    "socioeconomic_status": Q(f__socioeconomic_status__gt=0),
    "special_needs": Q(f__special_needs__gt=0),
    "standards": Q(f__standards__gt=0),
    "state_aid": Q(f__state_aid__gt=0),
    "supply": Q(f__supply__gt=0),
    "sustainability": Q(f__sustainability__gt=0),
    "sustainable_revenue_streams": Q(f__sustainable_revenue_streams__gt=0),
    "systems": Q(f__systems__gt=0),
    "taxation_regimes": Q(f__taxation_regimes__gt=0),
    "taxes": Q(f__taxes__gt=0),
    "teacher_absenteeism": Q(f__teacher_absenteeism__gt=0),
    "teacher_attendance": Q(f__teacher_attendance__gt=0),
    "teacher_identity": Q(f__teacher_identity__gt=0),
    "teacher_motivation": Q(f__teacher_motivation__gt=0),
    "teaching_approach": Q(f__teaching_approach__gt=0),
    "teaching_method": Q(f__teaching_method__gt=0),
    "trade_and_investment_system": Q(f__trade_and_investment_system__gt=0),
    "training_needs": Q(f__training_needs__gt=0),
    "training_pathway": Q(f__training_pathway__gt=0),
    "women": Q(f__women__gt=0),
    "urban": Q(f__urban__gt=0)
}


hdi_values = {
   "afghanistan": 0.498,
   "albania": 0.785,
   "algeria": 0.754,
   "andorra": 0.858,
   "angola": 0.581,
   "antiguaandbarbuda": 0.78,
   "argentina": 0.825,
   "armenia": 0.755,
   "australia": 0.939,
   "austria": 0.908,
   "azerbaijan": 0.757,
   "bahamas": 0.807,
   "bahrain": 0.846,
   "bangladesh": 0.608,
   "barbados": 0.8,
   "belarus": 0.808,
   "belgium": 0.916,
   "belize": 0.708,
   "benin": 0.515,
   "bhutan": 0.612,
   "bolivia": 0.693,
   "bosniaandherzegovina": 0.768,
   "botswana": 0.717,
   "brazil": 0.759,
   "bruneidarussalam": 0.853,
   "bulgaria": 0.813,
   "burkinafaso": 0.423,
   "burundi": 0.417,
   "cambodia": 0.582,
   "cameroon": 0.556,
   "canada": 0.926,
   "capeverde": 0.654,
   "centralafricanrepublic": 0.367,
   "chad": 0.404,
   "chile": 0.843,
   "china": 0.752,
   "colombia": 0.747,
   "comoros": 0.503,
   "congo1democratic": 0.457,
   "congo2republic": 0.606,
   "costarica": 0.794,
   "cotedivoire": 0.492,
   "croatia": 0.831,
   "cuba": 0.777,
   "cyprus": 0.869,
   "czechrepublic": 0.888,
   "denmark": 0.929,
   "djibouti": 0.476,
   "dominica2dominica": 0.736,
   "dominica1nrepublic": 0.715,
   "easttimor": 0.625,
   "ecuador": 0.752,
   "egypt": 0.696,
   "elsalvador": 0.674,
   "eritrea": 0.44,
   "estonia": 0.871,
   "eswatini": 0.588,
   "ethiopia": 0.463,
   "fiji": 0.741,
   "finland": 0.92,
   "france": 0.901,
   "gabon": 0.702,
   "gambia": 0.46,
   "georgia": 0.78,
   "germany": 0.936,
   "ghana": 0.592,
   "greece": 0.87,
   "grenada": 0.772,
   "guatemala": 0.65,
   "guinea1bissau": 0.455,
   "guinea2equatorial": 0.591,
   "guinea3": 0.459,
   "guyana": 0.654,
   "haiti": 0.498,
   "honduras": 0.617,
   "hungary": 0.838,
   "iceland": 0.935,
   "india": 0.64,
   "indonesia": 0.694,
   "iran": 0.798,
   "iraq": 0.685,
   "ireland": 0.938,
   "israel": 0.903,
   "italy": 0.88,
   "jamaica": 0.732,
   "japan": 0.909,
   "jordan": 0.735,
   "kazakhstan": 0.8,   
   "kenya": 0.59,
   "kiribati": 0.612,
   "korea3z": 0.903,
   "kuwait": 0.803,
   "kyrgyzstan": 0.672,
   "laos": 0.601,
   "latvia": 0.847,
   "lebanon": 0.757,
   "lesotho": 0.52,
   "liberia": 0.435,
   "libya": 0.706,
   "liechtenstein": 0.916,
   "lithuania": 0.858,
   "luxembourg": 0.904,
   "madagascar": 0.519,
   "malawi": 0.477,
   "malaysia": 0.802,
   "maldives": 0.717,
   "mali": 0.427,
   "malta": 0.878,
   "marshallislands": 0.708,
   "mauritania": 0.52,
   "mauritius": 0.79,
   "mexico": 0.774,
   "micronesia": 0.627,
   "moldovan1republicpridnestrovian": 0.7,
   "mongolia": 0.741,
   "montenegro": 0.814,
   "morocco": 0.667,
   "mozambique": 0.437,
   "myanmar": 0.578,
   "namibia": 0.647,
   "nepal": 0.574,
   "netherlands": 0.931,
   "newzealand": 0.917,
   "nicaragua": 0.658,
   "niger": 0.354,
   "nigeria": 0.532,
   "northmacedonia": 0.757,
   "norway": 0.953,
   "oman": 0.821,
   "pakistan": 0.562,
   "palau": 0.798,
   "palestine": 0.686,
   "panama": 0.789,
   "papuanewguinea": 0.544,
   "paraguay": 0.702,
   "peru": 0.75,
   "philippines": 0.699,
   "poland": 0.865,
   "portugal": 0.847,
   "qatar": 0.856,
   "romania": 0.811,
   "russia": 0.816,
   "rwanda": 0.524,
   "saintlucia": 0.747,
   "saintvincentandthegrenadines": 0.723,
   "samoa": 0.713,
   "saotomeandprincipe": 0.589,
   "saudiarabia": 0.853,
   "senegal": 0.505,
   "serbia": 0.787,
   "seychelles": 0.797,
   "sierraleone": 0.419,
   "singapore": 0.932,
   "slovakia": 0.855,
   "slovenia": 0.896,
   "solomonislands": 0.546,
   "southafrica": 0.699,
   "southkorea": 0.903,
   "southsudan": 0.388,
   "spain": 0.891,
   "srilanka": 0.77,
   "sudan": 0.502,
   "suriname": 0.72,
   "sweden": 0.933,
   "switzerland": 0.944,
   "syria": 0.536,
   "tajikistan": 0.65,
   "tanzania": 0.538,
   "thailand": 0.755,
   "togo": 0.503,
   "tonga": 0.726,
   "trinidadandtobago": 0.784,
   "tunisia": 0.735,
   "turkey": 0.791,
   "turkmenistan": 0.706,
   "uganda": 0.516,
   "ukraine": 0.751,
   "unitedarabemirates": 0.863,
   "unitedkingdom": 0.922,
   "unitedstates": 0.924,
   "uruguay": 0.804,
   "uzbekistan": 0.71,
   "vanuatu": 0.603,
   "venezuela": 0.761,
   "vietnam": 0.694,
   "yemen": 0.452,
   "zambia": 0.588,
   "zimbabwe": 0.535
}



def explain_character_with_dict_existence(field_value, output_query, search_filter):
    if field_value in search_filter:
        if output_query == None:
            output_query = search_filter[field_value]
        else:
            output_query |= search_filter[field_value]
    return output_query


def check_hdi(bottom_value, top_value, value_index, country):
    if country in value_index:
        hdi_value = value_index[country] 
        if (hdi_value > float(bottom_value)) and (hdi_value < float(top_value)):
            return True
        return False
    else:
        return True


def query_function(tak=None, author=None, year=None, form_gc_gr=None, form_gd=None, form_p1_p2=None, form_te_tt=None, form_f=None, form_o=None, form_r=None, below_rank_10=True, min_hdi=None, max_hdi=None):
    large_filter = Q()
    if tak:
        tak_query = SearchQuery(tak, search_type='websearch')
        large_filter &= Q(tsv=tak_query)
    if author:
        author_query = SearchQuery(author, search_type='websearch')
        large_filter &= Q(tsa=author_query)
    if year:
        large_filter &= Q(year=year)
    if form_gc_gr and form_gd:
        g_query = Q()
        for gc_gr_value in form_gc_gr:
            if min_hdi and max_hdi:
                if check_hdi(min_hdi, max_hdi, hdi_values, gc_gr_value) == True:
                    g_query = explain_character_with_dict_existence(gc_gr_value, g_query, search_filter_GC_GR)
            else:
                form_gc_query = explain_character_with_dict_existence(gc_gr_value, g_query, search_filter_GC_GR)
        for gd_value in form_gd:
            g_query = explain_character_with_dict_existence(gd_value, g_query, search_filter_GD) 
        large_filter &= Q(g_query)
    if form_gc_gr and not form_gd:
        g_query = Q()
        for gc_gr_value in form_gc_gr:
            if min_hdi and max_hdi:
                if check_hdi(min_hdi, max_hdi, hdi_values, gc_gr_value) == True:
                    g_query = explain_character_with_dict_existence(gc_gr_value, g_query, search_filter_GC_GR)
            else:
                g_query = explain_character_with_dict_existence(gc_gr_value, g_query, search_filter_GC_GR)
        large_filter &= Q(g_query)
    if form_gd and not form_gc_gr:
        g_query = Q()
        for gd_value in form_gd:
            g_query = explain_character_with_dict_existence(gd_value, g_query, search_filter_GD) 
        large_filter &= Q(g_query)
    if form_p1_p2:
        p_query = Q()
        for p_value in form_p1_p2:
            p_query = explain_character_with_dict_existence(p_value, p_query, search_filter_P1_P2) 
        large_filter &= Q(p_query)
    if form_te_tt:
        t_query = Q()
        for t_value in form_te_tt:
            t_query = explain_character_with_dict_existence(t_value, t_query, search_filter_TE_TT) 
        large_filter &= Q(t_query)
    if form_o:
        o_query = Q()
        for o_value in form_o:
            o_query = explain_character_with_dict_existence(o_value, o_query, search_filter_O) 
        large_filter &= Q(o_query)
    if form_f:
        f_query = Q()
        for f_value in form_f:
            f_query = explain_character_with_dict_existence(f_value, f_query, search_filter_F) 
        large_filter &= Q(f_query)
    if form_r:
        r_query = Q()
        for r_value in form_r:
            r_query = explain_character_with_dict_existence(r_value, r_query, search_filter_R) 
        large_filter &= Q(r_query)

    if large_filter == Q():
        tak_query = SearchQuery("IgnoreThisSearch", search_type='websearch')
        large_filter &= Q(tsv=tak_query)
    if below_rank_10 == True:
        large_filter &= Q(relevance__relevance__gt=10)
    return large_filter




def formulate_tak_query(query_string):
	query_parts = Q()

	for _q in query_string.split(" AND "):

		not_flag = re.findall("\s*NOT\s*", _q)
		_q = re.sub("\s*NOT\s*", "", _q)

		# remove single quote
		_q = re.sub("^\s*\'", "", _q)
		_q = re.sub("'\s*$", "", _q)

		# remove single quote
		_q = re.sub("^\s*\(\s*\'", "", _q)
		_q = re.sub("'\s*\)\s*$", "", _q)

		if not_flag:
			query_parts &= ~Q(tak__iregex=_q)
		else:
			query_parts &= Q(tak__iregex=_q)

	return query_parts


def faster_count():
    with connection.cursor() as cursor:
        cursor.execute("SELECT reltuples::bigint AS __count FROM pg_class WHERE relname = 'publications';")
        est_count = int(cursor.fetchone()[0])

    return est_count

